{"ast":null,"code":"import React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { Ionicons } from '@expo/vector-icons';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar AlertCard = function AlertCard(_ref) {\n  var message = _ref.message,\n    buttonText = _ref.buttonText,\n    onPress = _ref.onPress,\n    type = _ref.type;\n  var getColors = function getColors() {\n    switch (type) {\n      case 'danger':\n        return {\n          background: '#fef2f2',\n          border: '#fecaca',\n          icon: '#dc2626',\n          text: '#991b1b'\n        };\n      case 'warning':\n        return {\n          background: '#fef3c7',\n          border: '#fde68a',\n          icon: '#f59e0b',\n          text: '#92400e'\n        };\n      case 'info':\n      default:\n        return {\n          background: '#dbeafe',\n          border: '#bfdbfe',\n          icon: '#3b82f6',\n          text: '#1e40af'\n        };\n    }\n  };\n  var colors = getColors();\n  return _jsxs(View, {\n    style: [styles.container, {\n      backgroundColor: colors.background,\n      borderColor: colors.border\n    }],\n    children: [_jsx(View, {\n      style: styles.iconContainer,\n      children: _jsx(Ionicons, {\n        name: type === 'danger' ? 'alert-circle' : type === 'warning' ? 'warning' : 'information-circle',\n        size: 24,\n        color: colors.icon\n      })\n    }), _jsx(Text, {\n      style: [styles.message, {\n        color: colors.text\n      }],\n      children: message\n    }), _jsx(TouchableOpacity, {\n      style: [styles.button, {\n        backgroundColor: colors.icon\n      }],\n      onPress: onPress,\n      children: _jsx(Text, {\n        style: styles.buttonText,\n        children: buttonText\n      })\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    padding: 16,\n    borderRadius: 12,\n    borderWidth: 1,\n    marginBottom: 16\n  },\n  iconContainer: {\n    marginBottom: 8\n  },\n  message: {\n    fontSize: 16,\n    marginBottom: 16,\n    lineHeight: 22\n  },\n  button: {\n    paddingVertical: 10,\n    paddingHorizontal: 16,\n    borderRadius: 8,\n    alignItems: 'center'\n  },\n  buttonText: {\n    color: '#fff',\n    fontWeight: '600',\n    fontSize: 16\n  }\n});\nexport default AlertCard;","map":{"version":3,"names":["React","View","Text","StyleSheet","TouchableOpacity","Ionicons","jsx","_jsx","jsxs","_jsxs","AlertCard","_ref","message","buttonText","onPress","type","getColors","background","border","icon","text","colors","style","styles","container","backgroundColor","borderColor","children","iconContainer","name","size","color","button","create","padding","borderRadius","borderWidth","marginBottom","fontSize","lineHeight","paddingVertical","paddingHorizontal","alignItems","fontWeight"],"sources":["C:/Users/GIO/project/mobile-app/src/components/AlertCard.tsx"],"sourcesContent":["import React from 'react';\r\nimport { View, Text, StyleSheet, TouchableOpacity } from 'react-native';\r\nimport { Ionicons } from '@expo/vector-icons';\r\n\r\ninterface AlertCardProps {\r\n  message: string;\r\n  buttonText: string;\r\n  onPress: () => void;\r\n  type: 'warning' | 'danger' | 'info';\r\n}\r\n\r\nconst AlertCard: React.FC<AlertCardProps> = ({ message, buttonText, onPress, type }) => {\r\n  const getColors = () => {\r\n    switch (type) {\r\n      case 'danger':\r\n        return {\r\n          background: '#fef2f2',\r\n          border: '#fecaca',\r\n          icon: '#dc2626',\r\n          text: '#991b1b',\r\n        };\r\n      case 'warning':\r\n        return {\r\n          background: '#fef3c7',\r\n          border: '#fde68a',\r\n          icon: '#f59e0b',\r\n          text: '#92400e',\r\n        };\r\n      case 'info':\r\n      default:\r\n        return {\r\n          background: '#dbeafe',\r\n          border: '#bfdbfe',\r\n          icon: '#3b82f6',\r\n          text: '#1e40af',\r\n        };\r\n    }\r\n  };\r\n\r\n  const colors = getColors();\r\n  \r\n  return (\r\n    <View style={[styles.container, { backgroundColor: colors.background, borderColor: colors.border }]}>\r\n      <View style={styles.iconContainer}>\r\n        <Ionicons \r\n          name={type === 'danger' ? 'alert-circle' : type === 'warning' ? 'warning' : 'information-circle'} \r\n          size={24} \r\n          color={colors.icon} \r\n        />\r\n      </View>\r\n      <Text style={[styles.message, { color: colors.text }]}>{message}</Text>\r\n      <TouchableOpacity \r\n        style={[styles.button, { backgroundColor: colors.icon }]} \r\n        onPress={onPress}\r\n      >\r\n        <Text style={styles.buttonText}>{buttonText}</Text>\r\n      </TouchableOpacity>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    padding: 16,\r\n    borderRadius: 12,\r\n    borderWidth: 1,\r\n    marginBottom: 16,\r\n  },\r\n  iconContainer: {\r\n    marginBottom: 8,\r\n  },\r\n  message: {\r\n    fontSize: 16,\r\n    marginBottom: 16,\r\n    lineHeight: 22,\r\n  },\r\n  button: {\r\n    paddingVertical: 10,\r\n    paddingHorizontal: 16,\r\n    borderRadius: 8,\r\n    alignItems: 'center',\r\n  },\r\n  buttonText: {\r\n    color: '#fff',\r\n    fontWeight: '600',\r\n    fontSize: 16,\r\n  },\r\n});\r\n\r\nexport default AlertCard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Svg, { Circle } from 'react-native-svg';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar ProgressCircle = function ProgressCircle(_ref) {\n  var size = _ref.size,\n    strokeWidth = _ref.strokeWidth,\n    progress = _ref.progress,\n    label = _ref.label,\n    value = _ref.value,\n    color = _ref.color;\n  var radius = (size - strokeWidth) / 2;\n  var circumference = radius * 2 * Math.PI;\n  var strokeDashoffset = circumference - progress / 100 * circumference;\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.label,\n      children: label\n    }), _jsxs(View, {\n      style: styles.circleContainer,\n      children: [_jsxs(Svg, {\n        width: size,\n        height: size,\n        children: [_jsx(Circle, {\n          cx: size / 2,\n          cy: size / 2,\n          r: radius,\n          stroke: \"#e5e7eb\",\n          strokeWidth: strokeWidth,\n          fill: \"transparent\"\n        }), _jsx(Circle, {\n          cx: size / 2,\n          cy: size / 2,\n          r: radius,\n          stroke: color,\n          strokeWidth: strokeWidth,\n          strokeDasharray: `${circumference} ${circumference}`,\n          strokeDashoffset: strokeDashoffset,\n          strokeLinecap: \"round\",\n          fill: \"transparent\",\n          transform: `rotate(-90, ${size / 2}, ${size / 2})`\n        })]\n      }), _jsx(Text, {\n        style: [styles.valueText, {\n          color: color\n        }],\n        children: value\n      })]\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 8\n  },\n  label: {\n    fontSize: 14,\n    color: '#1e293b',\n    fontWeight: '500',\n    marginBottom: 4\n  },\n  circleContainer: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    position: 'relative'\n  },\n  valueText: {\n    position: 'absolute',\n    fontSize: 20,\n    fontWeight: 'bold'\n  }\n});\nexport default ProgressCircle;","map":{"version":3,"names":["React","View","Text","StyleSheet","Svg","Circle","jsx","_jsx","jsxs","_jsxs","ProgressCircle","_ref","size","strokeWidth","progress","label","value","color","radius","circumference","Math","PI","strokeDashoffset","style","styles","container","children","circleContainer","width","height","cx","cy","r","stroke","fill","strokeDasharray","strokeLinecap","transform","valueText","create","alignItems","justifyContent","padding","fontSize","fontWeight","marginBottom","position"],"sources":["C:/Users/GIO/project/mobile-app/src/components/ProgressCircle.tsx"],"sourcesContent":["import React from 'react';\r\nimport { View, Text, StyleSheet } from 'react-native';\r\nimport Svg, { Circle } from 'react-native-svg';\r\n\r\ninterface ProgressCircleProps {\r\n  size: number;\r\n  strokeWidth: number;\r\n  progress: number; // 0-100\r\n  label: string;\r\n  value: number;\r\n  color: string;\r\n}\r\n\r\nconst ProgressCircle: React.FC<ProgressCircleProps> = ({\r\n  size,\r\n  strokeWidth,\r\n  progress,\r\n  label,\r\n  value,\r\n  color,\r\n}) => {\r\n  const radius = (size - strokeWidth) / 2;\r\n  const circumference = radius * 2 * Math.PI;\r\n  const strokeDashoffset = circumference - (progress / 100) * circumference;\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text style={styles.label}>{label}</Text>\r\n      <View style={styles.circleContainer}>\r\n        <Svg width={size} height={size}>\r\n          {/* Background Circle */}\r\n          <Circle\r\n            cx={size / 2}\r\n            cy={size / 2}\r\n            r={radius}\r\n            stroke=\"#e5e7eb\"\r\n            strokeWidth={strokeWidth}\r\n            fill=\"transparent\"\r\n          />\r\n          {/* Progress Circle */}\r\n          <Circle\r\n            cx={size / 2}\r\n            cy={size / 2}\r\n            r={radius}\r\n            stroke={color}\r\n            strokeWidth={strokeWidth}\r\n            strokeDasharray={`${circumference} ${circumference}`}\r\n            strokeDashoffset={strokeDashoffset}\r\n            strokeLinecap=\"round\"\r\n            fill=\"transparent\"\r\n            transform={`rotate(-90, ${size / 2}, ${size / 2})`}\r\n          />\r\n        </Svg>\r\n        <Text style={[styles.valueText, { color }]}>{value}</Text>\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    padding: 8,\r\n  },\r\n  label: {\r\n    fontSize: 14,\r\n    color: '#1e293b',\r\n    fontWeight: '500',\r\n    marginBottom: 4,\r\n  },\r\n  circleContainer: {\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    position: 'relative',\r\n  },\r\n  valueText: {\r\n    position: 'absolute',\r\n    fontSize: 20,\r\n    fontWeight: 'bold',\r\n  },\r\n});\r\n\r\nexport default ProgressCircle;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { Ionicons } from '@expo/vector-icons';\nimport { useNavigation } from '@react-navigation/native';\nimport UserHeader from \"../components/UserHeader\";\nimport TaskCard from \"../components/TaskCard\";\nimport HealthMetricCard from \"../components/HealthMetricCard\";\nimport ProgressCircle from \"../components/ProgressCircle\";\nimport AlertCard from \"../components/AlertCard\";\nimport api from \"../utils/api\";\nimport { useAuth } from \"../contexts/AuthContext\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar PainSlider = function PainSlider(_ref) {\n  var value = _ref.value,\n    onChange = _ref.onChange;\n  var levels = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n  return _jsxs(View, {\n    style: styles.sliderContainer,\n    children: [_jsx(View, {\n      style: styles.sliderTrack,\n      children: levels.map(function (level) {\n        return _jsx(TouchableOpacity, {\n          style: [styles.sliderMarker, value === level && styles.sliderMarkerActive, level >= 7 ? styles.sliderMarkerHigh : level >= 4 ? styles.sliderMarkerMedium : styles.sliderMarkerLow],\n          onPress: function onPress() {\n            return onChange(level);\n          },\n          children: value === level && _jsx(Text, {\n            style: styles.sliderMarkerText,\n            children: level\n          })\n        }, level);\n      })\n    }), _jsxs(View, {\n      style: styles.sliderLabels,\n      children: [_jsx(Text, {\n        style: styles.sliderLabelText,\n        children: \"No Pain\"\n      }), _jsx(Text, {\n        style: styles.sliderLabelText,\n        children: \"Severe\"\n      })]\n    })]\n  });\n};\nvar SegmentedButtons = function SegmentedButtons(_ref2) {\n  var options = _ref2.options,\n    value = _ref2.value,\n    onChange = _ref2.onChange;\n  return _jsx(View, {\n    style: styles.segmentedContainer,\n    children: options.map(function (option) {\n      return _jsx(TouchableOpacity, {\n        style: [styles.segmentButton, value === option.value && styles.segmentButtonActive],\n        onPress: function onPress() {\n          return onChange(option.value);\n        },\n        children: _jsx(Text, {\n          style: [styles.segmentButtonText, value === option.value && styles.segmentButtonTextActive],\n          children: option.label\n        })\n      }, option.value);\n    })\n  });\n};\nvar EmojiSelector = function EmojiSelector(_ref3) {\n  var options = _ref3.options,\n    value = _ref3.value,\n    onChange = _ref3.onChange;\n  return _jsx(View, {\n    style: styles.emojiContainer,\n    children: options.map(function (option) {\n      return _jsxs(TouchableOpacity, {\n        style: [styles.emojiButton, value === option.value && styles.emojiButtonActive],\n        onPress: function onPress() {\n          return onChange(option.value);\n        },\n        children: [_jsx(Text, {\n          style: styles.emojiText,\n          children: option.emoji\n        }), value === option.value && _jsx(Text, {\n          style: styles.emojiLabelText,\n          children: option.label\n        })]\n      }, option.value);\n    })\n  });\n};\nvar HomeScreen = function HomeScreen() {\n  var _useAuth = useAuth(),\n    user = _useAuth.user;\n  var navigation = useNavigation();\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    checkInModalVisible = _useState2[0],\n    setCheckInModalVisible = _useState2[1];\n  var _useState3 = useState({\n      bmi: 22,\n      height: \"6'3\\\"\",\n      weight: \"230 lbs\",\n      mskScore: 8\n    }),\n    _useState4 = _slicedToArray(_useState3, 2),\n    healthMetrics = _useState4[0],\n    setHealthMetrics = _useState4[1];\n  var _useState5 = useState({\n      painLevel: 0,\n      canDoJob: 'yes',\n      mood: 'good',\n      sleepQuality: 'good'\n    }),\n    _useState6 = _slicedToArray(_useState5, 2),\n    checkInData = _useState6[0],\n    setCheckInData = _useState6[1];\n  var _useState7 = useState(false),\n    _useState8 = _slicedToArray(_useState7, 2),\n    hasCompletedCheckIn = _useState8[0],\n    setHasCompletedCheckIn = _useState8[1];\n  var _useState9 = useState(false),\n    _useState0 = _slicedToArray(_useState9, 2),\n    isHighRisk = _useState0[0],\n    setIsHighRisk = _useState0[1];\n  var _useState1 = useState([]),\n    _useState10 = _slicedToArray(_useState1, 2),\n    userCases = _useState10[0],\n    setUserCases = _useState10[1];\n  var _useState11 = useState(null),\n    _useState12 = _slicedToArray(_useState11, 2),\n    selectedCase = _useState12[0],\n    setSelectedCase = _useState12[1];\n  useEffect(function () {\n    checkDailyCheckInStatus();\n    fetchHealthMetrics();\n    fetchUserCases();\n  }, []);\n  var checkDailyCheckInStatus = function () {\n    var _ref4 = _asyncToGenerator(function* () {\n      try {\n        var response = yield api.get('/check-ins/today');\n        setHasCompletedCheckIn(response.data.completed);\n      } catch (error) {\n        console.error('Error checking daily check-in status:', error);\n      }\n    });\n    return function checkDailyCheckInStatus() {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n  var fetchHealthMetrics = function () {\n    var _ref5 = _asyncToGenerator(function* () {\n      try {\n        var response = yield api.get('/users/health-metrics');\n        setHealthMetrics(response.data);\n      } catch (error) {\n        console.error('Error fetching health metrics:', error);\n      }\n    });\n    return function fetchHealthMetrics() {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n  var fetchUserCases = function () {\n    var _ref6 = _asyncToGenerator(function* () {\n      try {\n        var response = yield api.get('/cases');\n        if (response.data && response.data.cases && response.data.cases.length > 0) {\n          setUserCases(response.data.cases);\n          setSelectedCase(response.data.cases[0]._id);\n        }\n      } catch (error) {\n        console.error('Error fetching user cases:', error);\n      }\n    });\n    return function fetchUserCases() {\n      return _ref6.apply(this, arguments);\n    };\n  }();\n  var handleCheckInSubmit = function () {\n    var _ref7 = _asyncToGenerator(function* () {\n      try {\n        if (!selectedCase) {\n          Alert.alert('Error', 'No case selected. Please contact support.');\n          return;\n        }\n        if (checkInData.painLevel >= 7) {\n          yield api.post('/alerts/create', {\n            type: 'high_pain',\n            painLevel: checkInData.painLevel\n          });\n        }\n        if (checkInData.canDoJob === 'no') {\n          yield api.post('/alerts/create', {\n            type: 'rtw_review',\n            canDoJob: checkInData.canDoJob\n          });\n        }\n        yield api.post('/check-ins', {\n          case: selectedCase,\n          painLevel: {\n            current: checkInData.painLevel\n          },\n          functionalStatus: {\n            sleep: checkInData.sleepQuality === 'good' ? 8 : checkInData.sleepQuality === 'ok' ? 5 : 2,\n            mood: checkInData.mood === 'good' ? 8 : checkInData.mood === 'neutral' ? 5 : 2\n          },\n          workStatus: {\n            workedToday: checkInData.canDoJob !== 'no',\n            difficulties: checkInData.canDoJob === 'modified' ? ['Modified duties required'] : []\n          }\n        });\n        setHasCompletedCheckIn(true);\n        setCheckInModalVisible(false);\n        Alert.alert('Check-in Submitted', 'Your daily check-in has been recorded successfully.', [{\n          text: 'OK'\n        }]);\n      } catch (error) {\n        console.error('Error submitting check-in:', error);\n        Alert.alert('Error', 'Failed to submit check-in. Please try again.', [{\n          text: 'OK'\n        }]);\n      }\n    });\n    return function handleCheckInSubmit() {\n      return _ref7.apply(this, arguments);\n    };\n  }();\n  return _jsxs(SafeAreaView, {\n    style: styles.safeArea,\n    children: [_jsxs(ScrollView, {\n      style: styles.container,\n      children: [_jsx(UserHeader, {\n        age: 62,\n        gender: \"Male\"\n      }), _jsx(TaskCard, {\n        hasPendingTasks: false\n      }), _jsx(Text, {\n        style: styles.sectionTitle,\n        children: \"Overall Health\"\n      }), _jsxs(View, {\n        style: styles.metricsRow,\n        children: [_jsxs(View, {\n          style: styles.metricsColumn,\n          children: [_jsx(HealthMetricCard, {\n            title: \"BMI\",\n            value: healthMetrics.bmi,\n            icon: _jsx(Ionicons, {\n              name: \"body-outline\",\n              size: 24,\n              color: \"#8b5cf6\"\n            })\n          }), _jsx(HealthMetricCard, {\n            title: \"Height\",\n            value: healthMetrics.height,\n            icon: _jsx(Ionicons, {\n              name: \"resize-outline\",\n              size: 24,\n              color: \"#8b5cf6\"\n            })\n          }), _jsx(HealthMetricCard, {\n            title: \"Weight\",\n            value: healthMetrics.weight,\n            icon: _jsx(Ionicons, {\n              name: \"scale-outline\",\n              size: 24,\n              color: \"#8b5cf6\"\n            })\n          })]\n        }), _jsxs(View, {\n          style: styles.mskScoreContainer,\n          children: [_jsx(Text, {\n            style: styles.mskScoreTitle,\n            children: \"MSK Score\"\n          }), _jsx(View, {\n            style: styles.mskScoreCircle,\n            children: _jsx(Text, {\n              style: styles.mskScoreValue,\n              children: healthMetrics.mskScore\n            })\n          }), _jsx(Ionicons, {\n            name: \"body\",\n            size: 80,\n            color: \"#8b5cf6\",\n            style: styles.mskScoreIcon\n          })]\n        })]\n      }), _jsxs(View, {\n        style: styles.progressCirclesContainer,\n        children: [_jsx(ProgressCircle, {\n          size: 80,\n          strokeWidth: 10,\n          progress: 90,\n          label: \"Posture\",\n          value: 9,\n          color: \"#3b82f6\"\n        }), _jsx(ProgressCircle, {\n          size: 80,\n          strokeWidth: 10,\n          progress: 90,\n          label: \"Flexibility\",\n          value: 9,\n          color: \"#3b82f6\"\n        }), _jsx(ProgressCircle, {\n          size: 80,\n          strokeWidth: 10,\n          progress: 70,\n          label: \"Mobility\",\n          value: 7,\n          color: \"#3b82f6\"\n        }), _jsx(ProgressCircle, {\n          size: 80,\n          strokeWidth: 10,\n          progress: 60,\n          label: \"Pain\",\n          value: 6,\n          color: \"#3b82f6\"\n        })]\n      }), isHighRisk && _jsx(AlertCard, {\n        type: \"danger\",\n        message: \"You are at high risk\",\n        buttonText: \"Next Step\",\n        onPress: function onPress() {\n          return navigation.navigate('Exercises');\n        }\n      }), _jsx(Text, {\n        style: styles.sectionTitle,\n        children: \"Performance Test History\"\n      }), _jsxs(View, {\n        style: styles.performanceTestsContainer,\n        children: [_jsxs(TouchableOpacity, {\n          style: styles.performanceTestCard,\n          children: [_jsx(Text, {\n            style: styles.performanceTestTitle,\n            children: \"Knee\"\n          }), _jsx(Ionicons, {\n            name: \"chevron-forward\",\n            size: 24,\n            color: \"#8b5cf6\"\n          })]\n        }), _jsxs(TouchableOpacity, {\n          style: styles.performanceTestCard,\n          children: [_jsx(Text, {\n            style: styles.performanceTestTitle,\n            children: \"Back\"\n          }), _jsx(Ionicons, {\n            name: \"chevron-forward\",\n            size: 24,\n            color: \"#8b5cf6\"\n          })]\n        })]\n      }), !hasCompletedCheckIn && _jsx(TouchableOpacity, {\n        style: styles.checkInButton,\n        onPress: function onPress() {\n          return setCheckInModalVisible(true);\n        },\n        children: _jsx(Text, {\n          style: styles.checkInButtonText,\n          children: \"Complete Today's Check-In\"\n        })\n      })]\n    }), _jsx(Modal, {\n      animationType: \"slide\",\n      transparent: true,\n      visible: checkInModalVisible,\n      onRequestClose: function onRequestClose() {\n        return setCheckInModalVisible(false);\n      },\n      children: _jsx(View, {\n        style: styles.modalContainer,\n        children: _jsxs(View, {\n          style: styles.modalContent,\n          children: [_jsxs(View, {\n            style: styles.modalHeader,\n            children: [_jsx(Text, {\n              style: styles.modalTitle,\n              children: \"Today's Check-In\"\n            }), _jsx(TouchableOpacity, {\n              onPress: function onPress() {\n                return setCheckInModalVisible(false);\n              },\n              children: _jsx(Ionicons, {\n                name: \"close\",\n                size: 24,\n                color: \"#6b7280\"\n              })\n            })]\n          }), _jsxs(ScrollView, {\n            style: styles.modalBody,\n            children: [_jsx(Text, {\n              style: styles.inputLabel,\n              children: \"Pain Level (0\\u201310)\"\n            }), _jsx(PainSlider, {\n              value: checkInData.painLevel,\n              onChange: function onChange(value) {\n                return setCheckInData(_objectSpread(_objectSpread({}, checkInData), {}, {\n                  painLevel: value\n                }));\n              }\n            }), _jsx(Text, {\n              style: styles.inputLabel,\n              children: \"Can you do your normal job today?\"\n            }), _jsx(SegmentedButtons, {\n              options: [{\n                label: 'Yes',\n                value: 'yes'\n              }, {\n                label: 'Modified',\n                value: 'modified'\n              }, {\n                label: 'No',\n                value: 'no'\n              }],\n              value: checkInData.canDoJob,\n              onChange: function onChange(value) {\n                return setCheckInData(_objectSpread(_objectSpread({}, checkInData), {}, {\n                  canDoJob: value\n                }));\n              }\n            }), _jsx(Text, {\n              style: styles.inputLabel,\n              children: \"Mood Today\"\n            }), _jsx(EmojiSelector, {\n              options: [{\n                emoji: '😊',\n                label: 'Good',\n                value: 'good'\n              }, {\n                emoji: '😐',\n                label: 'Neutral',\n                value: 'neutral'\n              }, {\n                emoji: '😞',\n                label: 'Bad',\n                value: 'bad'\n              }],\n              value: checkInData.mood,\n              onChange: function onChange(value) {\n                return setCheckInData(_objectSpread(_objectSpread({}, checkInData), {}, {\n                  mood: value\n                }));\n              }\n            }), _jsx(Text, {\n              style: styles.inputLabel,\n              children: \"Sleep Quality\"\n            }), _jsx(SegmentedButtons, {\n              options: [{\n                label: 'Good',\n                value: 'good'\n              }, {\n                label: 'OK',\n                value: 'ok'\n              }, {\n                label: 'Poor',\n                value: 'poor'\n              }],\n              value: checkInData.sleepQuality,\n              onChange: function onChange(value) {\n                return setCheckInData(_objectSpread(_objectSpread({}, checkInData), {}, {\n                  sleepQuality: value\n                }));\n              }\n            })]\n          }), _jsx(TouchableOpacity, {\n            style: styles.submitButton,\n            onPress: handleCheckInSubmit,\n            children: _jsx(Text, {\n              style: styles.submitButtonText,\n              children: \"Submit\"\n            })\n          })]\n        })\n      })\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  safeArea: {\n    flex: 1,\n    backgroundColor: '#f3f4f6'\n  },\n  container: {\n    flex: 1,\n    padding: 16\n  },\n  sectionTitle: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    color: '#1e293b',\n    marginBottom: 16\n  },\n  metricsRow: {\n    flexDirection: 'row',\n    marginBottom: 16\n  },\n  metricsColumn: {\n    flex: 1,\n    marginRight: 8,\n    gap: 8\n  },\n  mskScoreContainer: {\n    flex: 1,\n    backgroundColor: '#8b5cf6',\n    borderRadius: 12,\n    padding: 16,\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginLeft: 8\n  },\n  mskScoreTitle: {\n    color: '#fff',\n    fontSize: 16,\n    fontWeight: 'bold',\n    marginBottom: 8\n  },\n  mskScoreCircle: {\n    width: 60,\n    height: 60,\n    borderRadius: 30,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginBottom: 8\n  },\n  mskScoreValue: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    color: '#8b5cf6'\n  },\n  mskScoreIcon: {\n    position: 'absolute',\n    bottom: 10,\n    opacity: 0.3\n  },\n  progressCirclesContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    marginBottom: 16\n  },\n  performanceTestsContainer: {\n    flexDirection: 'row',\n    marginBottom: 16,\n    gap: 16\n  },\n  performanceTestCard: {\n    flex: 1,\n    backgroundColor: '#fff',\n    borderRadius: 12,\n    padding: 16,\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center'\n  },\n  performanceTestTitle: {\n    fontSize: 16,\n    fontWeight: '500',\n    color: '#1e293b'\n  },\n  checkInButton: {\n    backgroundColor: '#8b5cf6',\n    borderRadius: 12,\n    padding: 16,\n    alignItems: 'center',\n    marginBottom: 16\n  },\n  checkInButtonText: {\n    color: '#fff',\n    fontSize: 16,\n    fontWeight: 'bold'\n  },\n  modalContainer: {\n    flex: 1,\n    justifyContent: 'flex-end',\n    backgroundColor: 'rgba(0, 0, 0, 0.5)'\n  },\n  modalContent: {\n    backgroundColor: '#fff',\n    borderTopLeftRadius: 24,\n    borderTopRightRadius: 24,\n    padding: 20,\n    maxHeight: '90%'\n  },\n  modalHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 16\n  },\n  modalTitle: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    color: '#1e293b'\n  },\n  modalBody: {\n    maxHeight: 500\n  },\n  inputLabel: {\n    fontSize: 16,\n    fontWeight: '500',\n    color: '#1e293b',\n    marginBottom: 8,\n    marginTop: 16\n  },\n  sliderContainer: {\n    marginBottom: 16\n  },\n  sliderTrack: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    height: 40,\n    backgroundColor: '#f3f4f6',\n    borderRadius: 20,\n    paddingHorizontal: 4\n  },\n  sliderMarker: {\n    width: 24,\n    height: 24,\n    borderRadius: 12,\n    backgroundColor: '#e5e7eb',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  sliderMarkerActive: {\n    width: 32,\n    height: 32,\n    borderRadius: 16\n  },\n  sliderMarkerLow: {\n    backgroundColor: '#22c55e'\n  },\n  sliderMarkerMedium: {\n    backgroundColor: '#f59e0b'\n  },\n  sliderMarkerHigh: {\n    backgroundColor: '#ef4444'\n  },\n  sliderMarkerText: {\n    color: '#fff',\n    fontWeight: 'bold'\n  },\n  sliderLabels: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    marginTop: 4\n  },\n  sliderLabelText: {\n    fontSize: 12,\n    color: '#6b7280'\n  },\n  segmentedContainer: {\n    flexDirection: 'row',\n    backgroundColor: '#f3f4f6',\n    borderRadius: 8,\n    marginBottom: 16,\n    overflow: 'hidden'\n  },\n  segmentButton: {\n    flex: 1,\n    paddingVertical: 12,\n    alignItems: 'center'\n  },\n  segmentButtonActive: {\n    backgroundColor: '#8b5cf6'\n  },\n  segmentButtonText: {\n    color: '#6b7280',\n    fontWeight: '500'\n  },\n  segmentButtonTextActive: {\n    color: '#fff'\n  },\n  emojiContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    marginBottom: 16\n  },\n  emojiButton: {\n    alignItems: 'center',\n    padding: 12,\n    borderRadius: 8\n  },\n  emojiButtonActive: {\n    backgroundColor: '#f3f4f6'\n  },\n  emojiText: {\n    fontSize: 32\n  },\n  emojiLabelText: {\n    fontSize: 12,\n    color: '#6b7280',\n    marginTop: 4\n  },\n  submitButton: {\n    backgroundColor: '#8b5cf6',\n    borderRadius: 12,\n    padding: 16,\n    alignItems: 'center',\n    marginTop: 16\n  },\n  submitButtonText: {\n    color: '#fff',\n    fontSize: 16,\n    fontWeight: 'bold'\n  }\n});\nexport default HomeScreen;","map":{"version":3,"names":["React","useState","useEffect","View","Text","StyleSheet","ScrollView","TouchableOpacity","Modal","SafeAreaView","Alert","Ionicons","useNavigation","UserHeader","TaskCard","HealthMetricCard","ProgressCircle","AlertCard","api","useAuth","jsx","_jsx","jsxs","_jsxs","PainSlider","_ref","value","onChange","levels","style","styles","sliderContainer","children","sliderTrack","map","level","sliderMarker","sliderMarkerActive","sliderMarkerHigh","sliderMarkerMedium","sliderMarkerLow","onPress","sliderMarkerText","sliderLabels","sliderLabelText","SegmentedButtons","_ref2","options","segmentedContainer","option","segmentButton","segmentButtonActive","segmentButtonText","segmentButtonTextActive","label","EmojiSelector","_ref3","emojiContainer","emojiButton","emojiButtonActive","emojiText","emoji","emojiLabelText","HomeScreen","_useAuth","user","navigation","_useState","_useState2","_slicedToArray","checkInModalVisible","setCheckInModalVisible","_useState3","bmi","height","weight","mskScore","_useState4","healthMetrics","setHealthMetrics","_useState5","painLevel","canDoJob","mood","sleepQuality","_useState6","checkInData","setCheckInData","_useState7","_useState8","hasCompletedCheckIn","setHasCompletedCheckIn","_useState9","_useState0","isHighRisk","setIsHighRisk","_useState1","_useState10","userCases","setUserCases","_useState11","_useState12","selectedCase","setSelectedCase","checkDailyCheckInStatus","fetchHealthMetrics","fetchUserCases","_ref4","_asyncToGenerator","response","get","data","completed","error","console","apply","arguments","_ref5","_ref6","cases","length","_id","handleCheckInSubmit","_ref7","alert","post","type","case","current","functionalStatus","sleep","workStatus","workedToday","difficulties","text","safeArea","container","age","gender","hasPendingTasks","sectionTitle","metricsRow","metricsColumn","title","icon","name","size","color","mskScoreContainer","mskScoreTitle","mskScoreCircle","mskScoreValue","mskScoreIcon","progressCirclesContainer","strokeWidth","progress","message","buttonText","navigate","performanceTestsContainer","performanceTestCard","performanceTestTitle","checkInButton","checkInButtonText","animationType","transparent","visible","onRequestClose","modalContainer","modalContent","modalHeader","modalTitle","modalBody","inputLabel","_objectSpread","submitButton","submitButtonText","create","flex","backgroundColor","padding","fontSize","fontWeight","marginBottom","flexDirection","marginRight","gap","borderRadius","alignItems","justifyContent","marginLeft","width","position","bottom","opacity","borderTopLeftRadius","borderTopRightRadius","maxHeight","marginTop","paddingHorizontal","overflow","paddingVertical"],"sources":["C:/Users/GIO/project/mobile-app/src/screens/HomeScreen.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { \n  View, \n  Text, \n  StyleSheet, \n  ScrollView, \n  TouchableOpacity, \n  Modal,\n  SafeAreaView,\n  Alert\n} from 'react-native';\nimport { Ionicons } from '@expo/vector-icons';\nimport { useNavigation } from '@react-navigation/native';\n\nimport UserHeader from '../components/UserHeader';\nimport TaskCard from '../components/TaskCard';\nimport HealthMetricCard from '../components/HealthMetricCard';\nimport ProgressCircle from '../components/ProgressCircle';\nimport AlertCard from '../components/AlertCard';\nimport api from '../utils/api';\nimport { useAuth } from '../contexts/AuthContext';\n\n// Slider component for pain level\nconst PainSlider = ({ value, onChange }) => {\n  const levels = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n  \n  return (\n    <View style={styles.sliderContainer}>\n      <View style={styles.sliderTrack}>\n        {levels.map((level) => (\n          <TouchableOpacity\n            key={level}\n            style={[\n              styles.sliderMarker,\n              value === level && styles.sliderMarkerActive,\n              level >= 7 ? styles.sliderMarkerHigh :\n              level >= 4 ? styles.sliderMarkerMedium :\n              styles.sliderMarkerLow\n            ]}\n            onPress={() => onChange(level)}\n          >\n            {value === level && (\n              <Text style={styles.sliderMarkerText}>{level}</Text>\n            )}\n          </TouchableOpacity>\n        ))}\n      </View>\n      <View style={styles.sliderLabels}>\n        <Text style={styles.sliderLabelText}>No Pain</Text>\n        <Text style={styles.sliderLabelText}>Severe</Text>\n      </View>\n    </View>\n  );\n};\n\n// Segmented button component\nconst SegmentedButtons = ({ options, value, onChange }) => {\n  return (\n    <View style={styles.segmentedContainer}>\n      {options.map((option) => (\n        <TouchableOpacity\n          key={option.value}\n          style={[\n            styles.segmentButton,\n            value === option.value && styles.segmentButtonActive,\n          ]}\n          onPress={() => onChange(option.value)}\n        >\n          <Text style={[\n            styles.segmentButtonText,\n            value === option.value && styles.segmentButtonTextActive\n          ]}>\n            {option.label}\n          </Text>\n        </TouchableOpacity>\n      ))}\n    </View>\n  );\n};\n\n// Emoji selector component\nconst EmojiSelector = ({ options, value, onChange }) => {\n  return (\n    <View style={styles.emojiContainer}>\n      {options.map((option) => (\n        <TouchableOpacity\n          key={option.value}\n          style={[\n            styles.emojiButton,\n            value === option.value && styles.emojiButtonActive,\n          ]}\n          onPress={() => onChange(option.value)}\n        >\n          <Text style={styles.emojiText}>{option.emoji}</Text>\n          {value === option.value && (\n            <Text style={styles.emojiLabelText}>{option.label}</Text>\n          )}\n        </TouchableOpacity>\n      ))}\n    </View>\n  );\n};\n\nconst HomeScreen = () => {\n  const { user } = useAuth();\n  const navigation = useNavigation();\n  const [checkInModalVisible, setCheckInModalVisible] = useState(false);\n  const [healthMetrics, setHealthMetrics] = useState({\n    bmi: 22,\n    height: \"6'3\\\"\",\n    weight: \"230 lbs\",\n    mskScore: 8\n  });\n  \n  const [checkInData, setCheckInData] = useState({\n    painLevel: 0,\n    canDoJob: 'yes', // yes, modified, no\n    mood: 'good', // good, neutral, bad\n    sleepQuality: 'good', // good, ok, poor\n  });\n\n  const [hasCompletedCheckIn, setHasCompletedCheckIn] = useState(false);\n  const [isHighRisk, setIsHighRisk] = useState(false);\n  const [userCases, setUserCases] = useState([]);\n  const [selectedCase, setSelectedCase] = useState(null);\n\n  useEffect(() => {\n    // Check if user has already completed check-in today\n    checkDailyCheckInStatus();\n    // Fetch health metrics\n    fetchHealthMetrics();\n    // Fetch user's cases\n    fetchUserCases();\n  }, []);\n\n  const checkDailyCheckInStatus = async () => {\n    try {\n      const response = await api.get('/check-ins/today');\n      setHasCompletedCheckIn(response.data.completed);\n    } catch (error) {\n      console.error('Error checking daily check-in status:', error);\n    }\n  };\n\n  const fetchHealthMetrics = async () => {\n    try {\n      const response = await api.get('/users/health-metrics');\n      setHealthMetrics(response.data);\n    } catch (error) {\n      console.error('Error fetching health metrics:', error);\n    }\n  };\n\n  const fetchUserCases = async () => {\n    try {\n      const response = await api.get('/cases');\n      if (response.data && response.data.cases && response.data.cases.length > 0) {\n        setUserCases(response.data.cases);\n        // Select the first case by default\n        setSelectedCase(response.data.cases[0]._id);\n      }\n    } catch (error) {\n      console.error('Error fetching user cases:', error);\n    }\n  };\n\n  const handleCheckInSubmit = async () => {\n    try {\n      if (!selectedCase) {\n        Alert.alert('Error', 'No case selected. Please contact support.');\n        return;\n      }\n\n      // Check for alert triggers\n      if (checkInData.painLevel >= 7) {\n        // Trigger alert to physio dashboard\n        await api.post('/alerts/create', {\n          type: 'high_pain',\n          painLevel: checkInData.painLevel,\n        });\n      }\n      \n      if (checkInData.canDoJob === 'no') {\n        // Auto-flag for RTW review\n        await api.post('/alerts/create', {\n          type: 'rtw_review',\n          canDoJob: checkInData.canDoJob,\n        });\n      }\n      \n      // Submit check-in data with case ID\n      await api.post('/check-ins', {\n        case: selectedCase, // Include the case ID\n        painLevel: { current: checkInData.painLevel },\n        functionalStatus: {\n          sleep: checkInData.sleepQuality === 'good' ? 8 : checkInData.sleepQuality === 'ok' ? 5 : 2,\n          mood: checkInData.mood === 'good' ? 8 : checkInData.mood === 'neutral' ? 5 : 2,\n        },\n        workStatus: {\n          workedToday: checkInData.canDoJob !== 'no',\n          difficulties: checkInData.canDoJob === 'modified' ? ['Modified duties required'] : [],\n        }\n      });\n      \n      setHasCompletedCheckIn(true);\n      setCheckInModalVisible(false);\n      \n      Alert.alert(\n        'Check-in Submitted',\n        'Your daily check-in has been recorded successfully.',\n        [{ text: 'OK' }]\n      );\n      \n    } catch (error) {\n      console.error('Error submitting check-in:', error);\n      Alert.alert(\n        'Error',\n        'Failed to submit check-in. Please try again.',\n        [{ text: 'OK' }]\n      );\n    }\n  };\n\n  return (\n    <SafeAreaView style={styles.safeArea}>\n      <ScrollView style={styles.container}>\n        <UserHeader age={62} gender=\"Male\" />\n        \n        <TaskCard hasPendingTasks={false} />\n        \n        <Text style={styles.sectionTitle}>Overall Health</Text>\n        \n        <View style={styles.metricsRow}>\n          <View style={styles.metricsColumn}>\n            <HealthMetricCard\n              title=\"BMI\"\n              value={healthMetrics.bmi}\n              icon={<Ionicons name=\"body-outline\" size={24} color=\"#8b5cf6\" />}\n            />\n            <HealthMetricCard\n              title=\"Height\"\n              value={healthMetrics.height}\n              icon={<Ionicons name=\"resize-outline\" size={24} color=\"#8b5cf6\" />}\n            />\n            <HealthMetricCard\n              title=\"Weight\"\n              value={healthMetrics.weight}\n              icon={<Ionicons name=\"scale-outline\" size={24} color=\"#8b5cf6\" />}\n            />\n          </View>\n          \n          <View style={styles.mskScoreContainer}>\n            <Text style={styles.mskScoreTitle}>MSK Score</Text>\n            <View style={styles.mskScoreCircle}>\n              <Text style={styles.mskScoreValue}>{healthMetrics.mskScore}</Text>\n            </View>\n            <Ionicons name=\"body\" size={80} color=\"#8b5cf6\" style={styles.mskScoreIcon} />\n          </View>\n        </View>\n        \n        <View style={styles.progressCirclesContainer}>\n          <ProgressCircle\n            size={80}\n            strokeWidth={10}\n            progress={90}\n            label=\"Posture\"\n            value={9}\n            color=\"#3b82f6\"\n          />\n          <ProgressCircle\n            size={80}\n            strokeWidth={10}\n            progress={90}\n            label=\"Flexibility\"\n            value={9}\n            color=\"#3b82f6\"\n          />\n          <ProgressCircle\n            size={80}\n            strokeWidth={10}\n            progress={70}\n            label=\"Mobility\"\n            value={7}\n            color=\"#3b82f6\"\n          />\n          <ProgressCircle\n            size={80}\n            strokeWidth={10}\n            progress={60}\n            label=\"Pain\"\n            value={6}\n            color=\"#3b82f6\"\n          />\n        </View>\n        \n        {isHighRisk && (\n          <AlertCard\n            type=\"danger\"\n            message=\"You are at high risk\"\n            buttonText=\"Next Step\"\n            onPress={() => navigation.navigate('Exercises')}\n          />\n        )}\n        \n        <Text style={styles.sectionTitle}>Performance Test History</Text>\n        \n        <View style={styles.performanceTestsContainer}>\n          <TouchableOpacity style={styles.performanceTestCard}>\n            <Text style={styles.performanceTestTitle}>Knee</Text>\n            <Ionicons name=\"chevron-forward\" size={24} color=\"#8b5cf6\" />\n          </TouchableOpacity>\n          \n          <TouchableOpacity style={styles.performanceTestCard}>\n            <Text style={styles.performanceTestTitle}>Back</Text>\n            <Ionicons name=\"chevron-forward\" size={24} color=\"#8b5cf6\" />\n          </TouchableOpacity>\n        </View>\n        \n        {!hasCompletedCheckIn && (\n          <TouchableOpacity \n            style={styles.checkInButton}\n            onPress={() => setCheckInModalVisible(true)}\n          >\n            <Text style={styles.checkInButtonText}>Complete Today's Check-In</Text>\n          </TouchableOpacity>\n        )}\n      </ScrollView>\n      \n      {/* Daily Check-In Modal */}\n      <Modal\n        animationType=\"slide\"\n        transparent={true}\n        visible={checkInModalVisible}\n        onRequestClose={() => setCheckInModalVisible(false)}\n      >\n        <View style={styles.modalContainer}>\n          <View style={styles.modalContent}>\n            <View style={styles.modalHeader}>\n              <Text style={styles.modalTitle}>Today's Check-In</Text>\n              <TouchableOpacity onPress={() => setCheckInModalVisible(false)}>\n                <Ionicons name=\"close\" size={24} color=\"#6b7280\" />\n              </TouchableOpacity>\n            </View>\n            \n            <ScrollView style={styles.modalBody}>\n              <Text style={styles.inputLabel}>Pain Level (0–10)</Text>\n              <PainSlider\n                value={checkInData.painLevel}\n                onChange={(value) => setCheckInData({...checkInData, painLevel: value})}\n              />\n              \n              <Text style={styles.inputLabel}>Can you do your normal job today?</Text>\n              <SegmentedButtons\n                options={[\n                  { label: 'Yes', value: 'yes' },\n                  { label: 'Modified', value: 'modified' },\n                  { label: 'No', value: 'no' },\n                ]}\n                value={checkInData.canDoJob}\n                onChange={(value) => setCheckInData({...checkInData, canDoJob: value})}\n              />\n              \n              <Text style={styles.inputLabel}>Mood Today</Text>\n              <EmojiSelector\n                options={[\n                  { emoji: '😊', label: 'Good', value: 'good' },\n                  { emoji: '😐', label: 'Neutral', value: 'neutral' },\n                  { emoji: '😞', label: 'Bad', value: 'bad' },\n                ]}\n                value={checkInData.mood}\n                onChange={(value) => setCheckInData({...checkInData, mood: value})}\n              />\n              \n              <Text style={styles.inputLabel}>Sleep Quality</Text>\n              <SegmentedButtons\n                options={[\n                  { label: 'Good', value: 'good' },\n                  { label: 'OK', value: 'ok' },\n                  { label: 'Poor', value: 'poor' },\n                ]}\n                value={checkInData.sleepQuality}\n                onChange={(value) => setCheckInData({...checkInData, sleepQuality: value})}\n              />\n            </ScrollView>\n            \n            <TouchableOpacity \n              style={styles.submitButton}\n              onPress={handleCheckInSubmit}\n            >\n              <Text style={styles.submitButtonText}>Submit</Text>\n            </TouchableOpacity>\n          </View>\n        </View>\n      </Modal>\n    </SafeAreaView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  safeArea: {\n    flex: 1,\n    backgroundColor: '#f3f4f6',\n  },\n  container: {\n    flex: 1,\n    padding: 16,\n  },\n  sectionTitle: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    color: '#1e293b',\n    marginBottom: 16,\n  },\n  metricsRow: {\n    flexDirection: 'row',\n    marginBottom: 16,\n  },\n  metricsColumn: {\n    flex: 1,\n    marginRight: 8,\n    gap: 8,\n  },\n  mskScoreContainer: {\n    flex: 1,\n    backgroundColor: '#8b5cf6',\n    borderRadius: 12,\n    padding: 16,\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginLeft: 8,\n  },\n  mskScoreTitle: {\n    color: '#fff',\n    fontSize: 16,\n    fontWeight: 'bold',\n    marginBottom: 8,\n  },\n  mskScoreCircle: {\n    width: 60,\n    height: 60,\n    borderRadius: 30,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginBottom: 8,\n  },\n  mskScoreValue: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    color: '#8b5cf6',\n  },\n  mskScoreIcon: {\n    position: 'absolute',\n    bottom: 10,\n    opacity: 0.3,\n  },\n  progressCirclesContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    marginBottom: 16,\n  },\n  performanceTestsContainer: {\n    flexDirection: 'row',\n    marginBottom: 16,\n    gap: 16,\n  },\n  performanceTestCard: {\n    flex: 1,\n    backgroundColor: '#fff',\n    borderRadius: 12,\n    padding: 16,\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n  },\n  performanceTestTitle: {\n    fontSize: 16,\n    fontWeight: '500',\n    color: '#1e293b',\n  },\n  checkInButton: {\n    backgroundColor: '#8b5cf6',\n    borderRadius: 12,\n    padding: 16,\n    alignItems: 'center',\n    marginBottom: 16,\n  },\n  checkInButtonText: {\n    color: '#fff',\n    fontSize: 16,\n    fontWeight: 'bold',\n  },\n  modalContainer: {\n    flex: 1,\n    justifyContent: 'flex-end',\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n  },\n  modalContent: {\n    backgroundColor: '#fff',\n    borderTopLeftRadius: 24,\n    borderTopRightRadius: 24,\n    padding: 20,\n    maxHeight: '90%',\n  },\n  modalHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 16,\n  },\n  modalTitle: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    color: '#1e293b',\n  },\n  modalBody: {\n    maxHeight: 500,\n  },\n  inputLabel: {\n    fontSize: 16,\n    fontWeight: '500',\n    color: '#1e293b',\n    marginBottom: 8,\n    marginTop: 16,\n  },\n  sliderContainer: {\n    marginBottom: 16,\n  },\n  sliderTrack: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    height: 40,\n    backgroundColor: '#f3f4f6',\n    borderRadius: 20,\n    paddingHorizontal: 4,\n  },\n  sliderMarker: {\n    width: 24,\n    height: 24,\n    borderRadius: 12,\n    backgroundColor: '#e5e7eb',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  sliderMarkerActive: {\n    width: 32,\n    height: 32,\n    borderRadius: 16,\n  },\n  sliderMarkerLow: {\n    backgroundColor: '#22c55e',\n  },\n  sliderMarkerMedium: {\n    backgroundColor: '#f59e0b',\n  },\n  sliderMarkerHigh: {\n    backgroundColor: '#ef4444',\n  },\n  sliderMarkerText: {\n    color: '#fff',\n    fontWeight: 'bold',\n  },\n  sliderLabels: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    marginTop: 4,\n  },\n  sliderLabelText: {\n    fontSize: 12,\n    color: '#6b7280',\n  },\n  segmentedContainer: {\n    flexDirection: 'row',\n    backgroundColor: '#f3f4f6',\n    borderRadius: 8,\n    marginBottom: 16,\n    overflow: 'hidden',\n  },\n  segmentButton: {\n    flex: 1,\n    paddingVertical: 12,\n    alignItems: 'center',\n  },\n  segmentButtonActive: {\n    backgroundColor: '#8b5cf6',\n  },\n  segmentButtonText: {\n    color: '#6b7280',\n    fontWeight: '500',\n  },\n  segmentButtonTextActive: {\n    color: '#fff',\n  },\n  emojiContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    marginBottom: 16,\n  },\n  emojiButton: {\n    alignItems: 'center',\n    padding: 12,\n    borderRadius: 8,\n  },\n  emojiButtonActive: {\n    backgroundColor: '#f3f4f6',\n  },\n  emojiText: {\n    fontSize: 32,\n  },\n  emojiLabelText: {\n    fontSize: 12,\n    color: '#6b7280',\n    marginTop: 4,\n  },\n  submitButton: {\n    backgroundColor: '#8b5cf6',\n    borderRadius: 12,\n    padding: 16,\n    alignItems: 'center',\n    marginTop: 16,\n  },\n  submitButtonText: {\n    color: '#fff',\n    fontSize: 16,\n    fontWeight: 'bold',\n  },\n});\n\nexport default HomeScreen;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
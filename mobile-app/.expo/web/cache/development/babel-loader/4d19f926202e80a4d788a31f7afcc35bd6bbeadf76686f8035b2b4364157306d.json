{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport { Ionicons } from '@expo/vector-icons';\nimport api from \"../utils/api\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar ExerciseCard = function ExerciseCard(_ref) {\n  var exercise = _ref.exercise,\n    onComplete = _ref.onComplete,\n    onSkip = _ref.onSkip;\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    detailsVisible = _useState2[0],\n    setDetailsVisible = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    skipReason = _useState4[0],\n    setSkipReason = _useState4[1];\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    skipModalVisible = _useState6[0],\n    setSkipModalVisible = _useState6[1];\n  var skipReasons = ['Too painful', 'Don\\'t have equipment', 'Don\\'t understand instructions', 'No time', 'Forgot', 'Other'];\n  return _jsxs(View, {\n    style: styles.exerciseCard,\n    children: [_jsxs(TouchableOpacity, {\n      style: styles.exerciseHeader,\n      onPress: function onPress() {\n        return setDetailsVisible(!detailsVisible);\n      },\n      children: [_jsxs(View, {\n        style: styles.exerciseInfo,\n        children: [_jsx(Text, {\n          style: styles.exerciseName,\n          children: exercise.name\n        }), _jsxs(Text, {\n          style: styles.exerciseDetails,\n          children: [exercise.sets, \" sets \\xD7 \", exercise.repetitions, \" reps \\u2022 \", exercise.frequency]\n        })]\n      }), _jsxs(View, {\n        style: styles.exerciseActions,\n        children: [_jsx(TouchableOpacity, {\n          style: [styles.actionButton, styles.completeButton],\n          onPress: onComplete,\n          children: _jsx(Ionicons, {\n            name: \"checkmark\",\n            size: 20,\n            color: \"#fff\"\n          })\n        }), _jsx(TouchableOpacity, {\n          style: [styles.actionButton, styles.skipButton],\n          onPress: function onPress() {\n            return setSkipModalVisible(true);\n          },\n          children: _jsx(Ionicons, {\n            name: \"time-outline\",\n            size: 20,\n            color: \"#fff\"\n          })\n        })]\n      })]\n    }), detailsVisible && _jsxs(View, {\n      style: styles.exerciseDetails,\n      children: [exercise.imageUrl && _jsx(Image, {\n        source: {\n          uri: exercise.imageUrl\n        },\n        style: styles.exerciseImage,\n        resizeMode: \"cover\"\n      }), _jsx(Text, {\n        style: styles.exerciseDescription,\n        children: exercise.description\n      })]\n    }), _jsx(Modal, {\n      animationType: \"slide\",\n      transparent: true,\n      visible: skipModalVisible,\n      onRequestClose: function onRequestClose() {\n        return setSkipModalVisible(false);\n      },\n      children: _jsx(View, {\n        style: styles.modalContainer,\n        children: _jsxs(View, {\n          style: styles.modalContent,\n          children: [_jsxs(View, {\n            style: styles.modalHeader,\n            children: [_jsx(Text, {\n              style: styles.modalTitle,\n              children: \"Why are you skipping?\"\n            }), _jsx(TouchableOpacity, {\n              onPress: function onPress() {\n                return setSkipModalVisible(false);\n              },\n              children: _jsx(Ionicons, {\n                name: \"close\",\n                size: 24,\n                color: \"#6b7280\"\n              })\n            })]\n          }), _jsx(ScrollView, {\n            style: styles.modalBody,\n            children: skipReasons.map(function (reason) {\n              return _jsxs(TouchableOpacity, {\n                style: [styles.reasonOption, skipReason === reason && styles.reasonOptionSelected],\n                onPress: function onPress() {\n                  return setSkipReason(reason);\n                },\n                children: [_jsx(Text, {\n                  style: [styles.reasonText, skipReason === reason && styles.reasonTextSelected],\n                  children: reason\n                }), skipReason === reason && _jsx(Ionicons, {\n                  name: \"checkmark-circle\",\n                  size: 20,\n                  color: \"#8b5cf6\"\n                })]\n              }, reason);\n            })\n          }), _jsx(TouchableOpacity, {\n            style: styles.submitButton,\n            onPress: function onPress() {\n              if (skipReason) {\n                onSkip(skipReason);\n                setSkipModalVisible(false);\n                setSkipReason('');\n              } else {\n                Alert.alert('Please select a reason');\n              }\n            },\n            children: _jsx(Text, {\n              style: styles.submitButtonText,\n              children: \"Submit\"\n            })\n          })]\n        })\n      })\n    })]\n  });\n};\nvar RehabExercisesScreen = function RehabExercisesScreen() {\n  var _useState7 = useState([]),\n    _useState8 = _slicedToArray(_useState7, 2),\n    exercises = _useState8[0],\n    setExercises = _useState8[1];\n  var _useState9 = useState(true),\n    _useState0 = _slicedToArray(_useState9, 2),\n    loading = _useState0[0],\n    setLoading = _useState0[1];\n  var _useState1 = useState(0),\n    _useState10 = _slicedToArray(_useState1, 2),\n    completedCount = _useState10[0],\n    setCompletedCount = _useState10[1];\n  var _useState11 = useState(0),\n    _useState12 = _slicedToArray(_useState11, 2),\n    totalCount = _useState12[0],\n    setTotalCount = _useState12[1];\n  var _useState13 = useState(0),\n    _useState14 = _slicedToArray(_useState13, 2),\n    consecutiveCompletions = _useState14[0],\n    setConsecutiveCompletions = _useState14[1];\n  useEffect(function () {\n    fetchExercises();\n    fetchStats();\n  }, []);\n  var fetchExercises = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      try {\n        var _response$data$exerci, _response$data$exerci2;\n        setLoading(true);\n        var response = yield api.get('/rehab-plans/exercises/today');\n        setExercises(response.data.exercises || []);\n        setTotalCount(((_response$data$exerci = response.data.exercises) == null ? void 0 : _response$data$exerci.length) || 0);\n        setCompletedCount(((_response$data$exerci2 = response.data.exercises) == null ? void 0 : _response$data$exerci2.filter(function (e) {\n          return e.status === 'completed';\n        }).length) || 0);\n      } catch (error) {\n        console.error('Error fetching exercises:', error);\n        Alert.alert('Error', 'Failed to load exercises. Please try again.');\n      } finally {\n        setLoading(false);\n      }\n    });\n    return function fetchExercises() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var fetchStats = function () {\n    var _ref3 = _asyncToGenerator(function* () {\n      try {\n        var response = yield api.get('/rehab-plans/stats');\n        setConsecutiveCompletions(response.data.consecutiveCompletions || 0);\n      } catch (error) {\n        console.error('Error fetching stats:', error);\n      }\n    });\n    return function fetchStats() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  var handleCompleteExercise = function () {\n    var _ref4 = _asyncToGenerator(function* (exerciseId) {\n      try {\n        yield api.put(`/rehab-plans/exercises/${exerciseId}/complete`);\n        setExercises(exercises.map(function (ex) {\n          return ex._id === exerciseId ? _objectSpread(_objectSpread({}, ex), {}, {\n            status: 'completed'\n          }) : ex;\n        }));\n        setCompletedCount(function (prev) {\n          return prev + 1;\n        });\n        var allCompleted = exercises.every(function (ex) {\n          return ex._id === exerciseId ? true : ex.status === 'completed';\n        });\n        if (allCompleted) {\n          if (consecutiveCompletions + 1 >= 5) {\n            Alert.alert('Great Progress!', 'You\\'ve completed all exercises for 5 consecutive days. Keep up the excellent work!');\n          }\n        }\n      } catch (error) {\n        console.error('Error completing exercise:', error);\n        Alert.alert('Error', 'Failed to mark exercise as completed.');\n      }\n    });\n    return function handleCompleteExercise(_x) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n  var handleSkipExercise = function () {\n    var _ref5 = _asyncToGenerator(function* (exerciseId, reason) {\n      try {\n        yield api.put(`/rehab-plans/exercises/${exerciseId}/skip`, {\n          reason: reason\n        });\n        setExercises(exercises.map(function (ex) {\n          return ex._id === exerciseId ? _objectSpread(_objectSpread({}, ex), {}, {\n            status: 'skipped'\n          }) : ex;\n        }));\n        var skippedExercises = exercises.filter(function (ex) {\n          return ex.status === 'skipped';\n        }).length;\n        if (skippedExercises >= 2) {\n          yield api.post('/alerts/create', {\n            type: 'exercise_compliance',\n            skippedCount: skippedExercises,\n            reason: reason\n          });\n          Alert.alert('Notice', 'Your physical therapist has been notified that you\\'re having difficulty completing these exercises.');\n        }\n      } catch (error) {\n        console.error('Error skipping exercise:', error);\n        Alert.alert('Error', 'Failed to mark exercise as skipped.');\n      }\n    });\n    return function handleSkipExercise(_x2, _x3) {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n  var handleAllDone = function () {\n    var _ref6 = _asyncToGenerator(function* () {\n      if (completedCount === totalCount) {\n        try {\n          yield api.post('/rehab-plans/complete-session');\n          Alert.alert('Great Job!', 'You\\'ve completed all your exercises for today.', [{\n            text: 'OK'\n          }]);\n        } catch (error) {\n          console.error('Error completing session:', error);\n        }\n      } else {\n        Alert.alert('Exercises Remaining', 'You still have exercises to complete or skip.', [{\n          text: 'OK'\n        }]);\n      }\n    });\n    return function handleAllDone() {\n      return _ref6.apply(this, arguments);\n    };\n  }();\n  return _jsx(SafeAreaView, {\n    style: styles.safeArea,\n    children: _jsxs(View, {\n      style: styles.container,\n      children: [_jsxs(View, {\n        style: styles.header,\n        children: [_jsx(Text, {\n          style: styles.title,\n          children: \"Today's Recovery Plan\"\n        }), _jsxs(View, {\n          style: styles.progressContainer,\n          children: [_jsxs(Text, {\n            style: styles.progressText,\n            children: [completedCount, \"/\", totalCount, \" Completed\"]\n          }), _jsx(View, {\n            style: styles.progressBar,\n            children: _jsx(View, {\n              style: [styles.progressFill, {\n                width: `${totalCount > 0 ? completedCount / totalCount * 100 : 0}%`\n              }]\n            })\n          })]\n        })]\n      }), _jsx(ScrollView, {\n        style: styles.exerciseList,\n        children: exercises.length > 0 ? exercises.map(function (exercise) {\n          return _jsx(ExerciseCard, {\n            exercise: exercise,\n            onComplete: function onComplete() {\n              return handleCompleteExercise(exercise._id);\n            },\n            onSkip: function onSkip(reason) {\n              return handleSkipExercise(exercise._id, reason);\n            }\n          }, exercise._id);\n        }) : _jsxs(View, {\n          style: styles.emptyState,\n          children: [_jsx(Ionicons, {\n            name: \"fitness\",\n            size: 64,\n            color: \"#d1d5db\"\n          }), _jsx(Text, {\n            style: styles.emptyStateText,\n            children: \"No exercises scheduled for today\"\n          }), _jsx(Text, {\n            style: styles.emptyStateSubtext,\n            children: \"Check back tomorrow or contact your physical therapist\"\n          })]\n        })\n      }), exercises.length > 0 && _jsx(TouchableOpacity, {\n        style: [styles.allDoneButton, completedCount === totalCount ? styles.allDoneButtonActive : {}],\n        onPress: handleAllDone,\n        children: _jsx(Text, {\n          style: styles.allDoneButtonText,\n          children: \"All Done\"\n        })\n      })]\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  safeArea: {\n    flex: 1,\n    backgroundColor: '#f3f4f6'\n  },\n  container: {\n    flex: 1,\n    padding: 16\n  },\n  header: {\n    marginBottom: 16\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    color: '#1e293b',\n    marginBottom: 8\n  },\n  progressContainer: {\n    marginBottom: 8\n  },\n  progressText: {\n    fontSize: 14,\n    color: '#6b7280',\n    marginBottom: 4\n  },\n  progressBar: {\n    height: 8,\n    backgroundColor: '#e5e7eb',\n    borderRadius: 4,\n    overflow: 'hidden'\n  },\n  progressFill: {\n    height: '100%',\n    backgroundColor: '#8b5cf6',\n    borderRadius: 4\n  },\n  exerciseList: {\n    flex: 1\n  },\n  exerciseCard: {\n    backgroundColor: '#fff',\n    borderRadius: 12,\n    marginBottom: 12,\n    overflow: 'hidden',\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 1\n    },\n    shadowOpacity: 0.1,\n    shadowRadius: 2,\n    elevation: 2\n  },\n  exerciseHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    padding: 16\n  },\n  exerciseInfo: {\n    flex: 1\n  },\n  exerciseName: {\n    fontSize: 16,\n    fontWeight: '600',\n    color: '#1e293b',\n    marginBottom: 4\n  },\n  exerciseDetails: {\n    fontSize: 14,\n    color: '#6b7280'\n  },\n  exerciseActions: {\n    flexDirection: 'row',\n    gap: 8\n  },\n  actionButton: {\n    width: 36,\n    height: 36,\n    borderRadius: 18,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  completeButton: {\n    backgroundColor: '#22c55e'\n  },\n  skipButton: {\n    backgroundColor: '#f59e0b'\n  },\n  exerciseDetails: {\n    padding: 16,\n    borderTopWidth: 1,\n    borderTopColor: '#f3f4f6'\n  },\n  exerciseImage: {\n    width: '100%',\n    height: 150,\n    borderRadius: 8,\n    marginBottom: 12\n  },\n  exerciseDescription: {\n    fontSize: 14,\n    color: '#4b5563',\n    lineHeight: 20\n  },\n  emptyState: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 40\n  },\n  emptyStateText: {\n    fontSize: 18,\n    fontWeight: '600',\n    color: '#6b7280',\n    marginTop: 16,\n    marginBottom: 8\n  },\n  emptyStateSubtext: {\n    fontSize: 14,\n    color: '#9ca3af',\n    textAlign: 'center'\n  },\n  allDoneButton: {\n    backgroundColor: '#e5e7eb',\n    borderRadius: 12,\n    padding: 16,\n    alignItems: 'center',\n    marginTop: 16\n  },\n  allDoneButtonActive: {\n    backgroundColor: '#8b5cf6'\n  },\n  allDoneButtonText: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    color: '#1e293b'\n  },\n  modalContainer: {\n    flex: 1,\n    justifyContent: 'flex-end',\n    backgroundColor: 'rgba(0, 0, 0, 0.5)'\n  },\n  modalContent: {\n    backgroundColor: '#fff',\n    borderTopLeftRadius: 24,\n    borderTopRightRadius: 24,\n    padding: 20,\n    maxHeight: '70%'\n  },\n  modalHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 16\n  },\n  modalTitle: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    color: '#1e293b'\n  },\n  modalBody: {\n    maxHeight: 300\n  },\n  reasonOption: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    paddingVertical: 16,\n    paddingHorizontal: 12,\n    borderBottomWidth: 1,\n    borderBottomColor: '#f3f4f6'\n  },\n  reasonOptionSelected: {\n    backgroundColor: '#f3e8ff'\n  },\n  reasonText: {\n    fontSize: 16,\n    color: '#4b5563'\n  },\n  reasonTextSelected: {\n    color: '#8b5cf6',\n    fontWeight: '500'\n  },\n  submitButton: {\n    backgroundColor: '#8b5cf6',\n    borderRadius: 12,\n    padding: 16,\n    alignItems: 'center',\n    marginTop: 16\n  },\n  submitButtonText: {\n    color: '#fff',\n    fontSize: 16,\n    fontWeight: 'bold'\n  }\n});\nexport default RehabExercisesScreen;","map":{"version":3,"names":["React","useState","useEffect","View","Text","StyleSheet","ScrollView","TouchableOpacity","Alert","Image","Modal","SafeAreaView","Ionicons","api","jsx","_jsx","jsxs","_jsxs","ExerciseCard","_ref","exercise","onComplete","onSkip","_useState","_useState2","_slicedToArray","detailsVisible","setDetailsVisible","_useState3","_useState4","skipReason","setSkipReason","_useState5","_useState6","skipModalVisible","setSkipModalVisible","skipReasons","style","styles","exerciseCard","children","exerciseHeader","onPress","exerciseInfo","exerciseName","name","exerciseDetails","sets","repetitions","frequency","exerciseActions","actionButton","completeButton","size","color","skipButton","imageUrl","source","uri","exerciseImage","resizeMode","exerciseDescription","description","animationType","transparent","visible","onRequestClose","modalContainer","modalContent","modalHeader","modalTitle","modalBody","map","reason","reasonOption","reasonOptionSelected","reasonText","reasonTextSelected","submitButton","alert","submitButtonText","RehabExercisesScreen","_useState7","_useState8","exercises","setExercises","_useState9","_useState0","loading","setLoading","_useState1","_useState10","completedCount","setCompletedCount","_useState11","_useState12","totalCount","setTotalCount","_useState13","_useState14","consecutiveCompletions","setConsecutiveCompletions","fetchExercises","fetchStats","_ref2","_asyncToGenerator","_response$data$exerci","_response$data$exerci2","response","get","data","length","filter","e","status","error","console","apply","arguments","_ref3","handleCompleteExercise","_ref4","exerciseId","put","ex","_id","_objectSpread","prev","allCompleted","every","_x","handleSkipExercise","_ref5","skippedExercises","post","type","skippedCount","_x2","_x3","handleAllDone","_ref6","text","safeArea","container","header","title","progressContainer","progressText","progressBar","progressFill","width","exerciseList","emptyState","emptyStateText","emptyStateSubtext","allDoneButton","allDoneButtonActive","allDoneButtonText","create","flex","backgroundColor","padding","marginBottom","fontSize","fontWeight","height","borderRadius","overflow","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","flexDirection","justifyContent","alignItems","gap","borderTopWidth","borderTopColor","lineHeight","marginTop","textAlign","borderTopLeftRadius","borderTopRightRadius","maxHeight","paddingVertical","paddingHorizontal","borderBottomWidth","borderBottomColor"],"sources":["C:/Users/GIO/project/mobile-app/src/screens/RehabExercisesScreen.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport {\r\n  View,\r\n  Text,\r\n  StyleSheet,\r\n  ScrollView,\r\n  TouchableOpacity,\r\n  Alert,\r\n  Image,\r\n  Modal,\r\n  SafeAreaView\r\n} from 'react-native';\r\nimport { Ionicons } from '@expo/vector-icons';\r\nimport api from '../utils/api';\r\n\r\ninterface Exercise {\r\n  _id: string;\r\n  name: string;\r\n  description: string;\r\n  sets: number;\r\n  repetitions: number;\r\n  frequency: string;\r\n  status: string;\r\n  imageUrl?: string;\r\n  videoUrl?: string;\r\n}\r\n\r\nconst ExerciseCard = ({ \r\n  exercise, \r\n  onComplete, \r\n  onSkip \r\n}: { \r\n  exercise: Exercise; \r\n  onComplete: () => void; \r\n  onSkip: (reason: string) => void; \r\n}) => {\r\n  const [detailsVisible, setDetailsVisible] = useState(false);\r\n  const [skipReason, setSkipReason] = useState('');\r\n  const [skipModalVisible, setSkipModalVisible] = useState(false);\r\n  \r\n  const skipReasons = [\r\n    'Too painful',\r\n    'Don\\'t have equipment',\r\n    'Don\\'t understand instructions',\r\n    'No time',\r\n    'Forgot',\r\n    'Other'\r\n  ];\r\n\r\n  return (\r\n    <View style={styles.exerciseCard}>\r\n      <TouchableOpacity \r\n        style={styles.exerciseHeader} \r\n        onPress={() => setDetailsVisible(!detailsVisible)}\r\n      >\r\n        <View style={styles.exerciseInfo}>\r\n          <Text style={styles.exerciseName}>{exercise.name}</Text>\r\n          <Text style={styles.exerciseDetails}>\r\n            {exercise.sets} sets × {exercise.repetitions} reps • {exercise.frequency}\r\n          </Text>\r\n        </View>\r\n        <View style={styles.exerciseActions}>\r\n          <TouchableOpacity \r\n            style={[styles.actionButton, styles.completeButton]}\r\n            onPress={onComplete}\r\n          >\r\n            <Ionicons name=\"checkmark\" size={20} color=\"#fff\" />\r\n          </TouchableOpacity>\r\n          <TouchableOpacity \r\n            style={[styles.actionButton, styles.skipButton]}\r\n            onPress={() => setSkipModalVisible(true)}\r\n          >\r\n            <Ionicons name=\"time-outline\" size={20} color=\"#fff\" />\r\n          </TouchableOpacity>\r\n        </View>\r\n      </TouchableOpacity>\r\n\r\n      {detailsVisible && (\r\n        <View style={styles.exerciseDetails}>\r\n          {exercise.imageUrl && (\r\n            <Image \r\n              source={{ uri: exercise.imageUrl }} \r\n              style={styles.exerciseImage}\r\n              resizeMode=\"cover\"\r\n            />\r\n          )}\r\n          <Text style={styles.exerciseDescription}>{exercise.description}</Text>\r\n        </View>\r\n      )}\r\n\r\n      {/* Skip Reason Modal */}\r\n      <Modal\r\n        animationType=\"slide\"\r\n        transparent={true}\r\n        visible={skipModalVisible}\r\n        onRequestClose={() => setSkipModalVisible(false)}\r\n      >\r\n        <View style={styles.modalContainer}>\r\n          <View style={styles.modalContent}>\r\n            <View style={styles.modalHeader}>\r\n              <Text style={styles.modalTitle}>Why are you skipping?</Text>\r\n              <TouchableOpacity onPress={() => setSkipModalVisible(false)}>\r\n                <Ionicons name=\"close\" size={24} color=\"#6b7280\" />\r\n              </TouchableOpacity>\r\n            </View>\r\n            \r\n            <ScrollView style={styles.modalBody}>\r\n              {skipReasons.map((reason) => (\r\n                <TouchableOpacity \r\n                  key={reason}\r\n                  style={[\r\n                    styles.reasonOption,\r\n                    skipReason === reason && styles.reasonOptionSelected\r\n                  ]}\r\n                  onPress={() => setSkipReason(reason)}\r\n                >\r\n                  <Text style={[\r\n                    styles.reasonText,\r\n                    skipReason === reason && styles.reasonTextSelected\r\n                  ]}>\r\n                    {reason}\r\n                  </Text>\r\n                  {skipReason === reason && (\r\n                    <Ionicons name=\"checkmark-circle\" size={20} color=\"#8b5cf6\" />\r\n                  )}\r\n                </TouchableOpacity>\r\n              ))}\r\n            </ScrollView>\r\n            \r\n            <TouchableOpacity \r\n              style={styles.submitButton}\r\n              onPress={() => {\r\n                if (skipReason) {\r\n                  onSkip(skipReason);\r\n                  setSkipModalVisible(false);\r\n                  setSkipReason('');\r\n                } else {\r\n                  Alert.alert('Please select a reason');\r\n                }\r\n              }}\r\n            >\r\n              <Text style={styles.submitButtonText}>Submit</Text>\r\n            </TouchableOpacity>\r\n          </View>\r\n        </View>\r\n      </Modal>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst RehabExercisesScreen = () => {\r\n  const [exercises, setExercises] = useState<Exercise[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [completedCount, setCompletedCount] = useState(0);\r\n  const [totalCount, setTotalCount] = useState(0);\r\n  const [consecutiveCompletions, setConsecutiveCompletions] = useState(0);\r\n  \r\n  useEffect(() => {\r\n    fetchExercises();\r\n    fetchStats();\r\n  }, []);\r\n\r\n  const fetchExercises = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const response = await api.get('/rehab-plans/exercises/today');\r\n      setExercises(response.data.exercises || []);\r\n      setTotalCount(response.data.exercises?.length || 0);\r\n      setCompletedCount(response.data.exercises?.filter(e => e.status === 'completed').length || 0);\r\n    } catch (error) {\r\n      console.error('Error fetching exercises:', error);\r\n      Alert.alert('Error', 'Failed to load exercises. Please try again.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const fetchStats = async () => {\r\n    try {\r\n      const response = await api.get('/rehab-plans/stats');\r\n      setConsecutiveCompletions(response.data.consecutiveCompletions || 0);\r\n    } catch (error) {\r\n      console.error('Error fetching stats:', error);\r\n    }\r\n  };\r\n\r\n  const handleCompleteExercise = async (exerciseId: string) => {\r\n    try {\r\n      await api.put(`/rehab-plans/exercises/${exerciseId}/complete`);\r\n      \r\n      // Update local state\r\n      setExercises(exercises.map(ex => \r\n        ex._id === exerciseId ? { ...ex, status: 'completed' } : ex\r\n      ));\r\n      \r\n      setCompletedCount(prev => prev + 1);\r\n      \r\n      // Check if all exercises are completed\r\n      const allCompleted = exercises.every(ex => \r\n        ex._id === exerciseId ? true : ex.status === 'completed'\r\n      );\r\n      \r\n      if (allCompleted) {\r\n        // Logic Trigger: If all exercises completed 5 days in a row\r\n        if (consecutiveCompletions + 1 >= 5) {\r\n          Alert.alert(\r\n            'Great Progress!',\r\n            'You\\'ve completed all exercises for 5 consecutive days. Keep up the excellent work!'\r\n          );\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error('Error completing exercise:', error);\r\n      Alert.alert('Error', 'Failed to mark exercise as completed.');\r\n    }\r\n  };\r\n\r\n  const handleSkipExercise = async (exerciseId: string, reason: string) => {\r\n    try {\r\n      await api.put(`/rehab-plans/exercises/${exerciseId}/skip`, { reason });\r\n      \r\n      // Update local state\r\n      setExercises(exercises.map(ex => \r\n        ex._id === exerciseId ? { ...ex, status: 'skipped' } : ex\r\n      ));\r\n      \r\n      // Logic Trigger: If skipped ≥ 2 consecutive sessions\r\n      const skippedExercises = exercises.filter(ex => ex.status === 'skipped').length;\r\n      if (skippedExercises >= 2) {\r\n        // Notify physio to review plan\r\n        await api.post('/alerts/create', {\r\n          type: 'exercise_compliance',\r\n          skippedCount: skippedExercises,\r\n          reason: reason,\r\n        });\r\n        \r\n        Alert.alert(\r\n          'Notice',\r\n          'Your physical therapist has been notified that you\\'re having difficulty completing these exercises.'\r\n        );\r\n      }\r\n    } catch (error) {\r\n      console.error('Error skipping exercise:', error);\r\n      Alert.alert('Error', 'Failed to mark exercise as skipped.');\r\n    }\r\n  };\r\n\r\n  const handleAllDone = async () => {\r\n    if (completedCount === totalCount) {\r\n      try {\r\n        await api.post('/rehab-plans/complete-session');\r\n        Alert.alert(\r\n          'Great Job!',\r\n          'You\\'ve completed all your exercises for today.',\r\n          [{ text: 'OK' }]\r\n        );\r\n      } catch (error) {\r\n        console.error('Error completing session:', error);\r\n      }\r\n    } else {\r\n      Alert.alert(\r\n        'Exercises Remaining',\r\n        'You still have exercises to complete or skip.',\r\n        [{ text: 'OK' }]\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <SafeAreaView style={styles.safeArea}>\r\n      <View style={styles.container}>\r\n        <View style={styles.header}>\r\n          <Text style={styles.title}>Today's Recovery Plan</Text>\r\n          <View style={styles.progressContainer}>\r\n            <Text style={styles.progressText}>\r\n              {completedCount}/{totalCount} Completed\r\n            </Text>\r\n            <View style={styles.progressBar}>\r\n              <View \r\n                style={[\r\n                  styles.progressFill, \r\n                  { width: `${totalCount > 0 ? (completedCount / totalCount) * 100 : 0}%` }\r\n                ]} \r\n              />\r\n            </View>\r\n          </View>\r\n        </View>\r\n\r\n        <ScrollView style={styles.exerciseList}>\r\n          {exercises.length > 0 ? (\r\n            exercises.map((exercise) => (\r\n              <ExerciseCard\r\n                key={exercise._id}\r\n                exercise={exercise}\r\n                onComplete={() => handleCompleteExercise(exercise._id)}\r\n                onSkip={(reason) => handleSkipExercise(exercise._id, reason)}\r\n              />\r\n            ))\r\n          ) : (\r\n            <View style={styles.emptyState}>\r\n              <Ionicons name=\"fitness\" size={64} color=\"#d1d5db\" />\r\n              <Text style={styles.emptyStateText}>No exercises scheduled for today</Text>\r\n              <Text style={styles.emptyStateSubtext}>\r\n                Check back tomorrow or contact your physical therapist\r\n              </Text>\r\n            </View>\r\n          )}\r\n        </ScrollView>\r\n\r\n        {exercises.length > 0 && (\r\n          <TouchableOpacity \r\n            style={[\r\n              styles.allDoneButton,\r\n              completedCount === totalCount ? styles.allDoneButtonActive : {}\r\n            ]}\r\n            onPress={handleAllDone}\r\n          >\r\n            <Text style={styles.allDoneButtonText}>All Done</Text>\r\n          </TouchableOpacity>\r\n        )}\r\n      </View>\r\n    </SafeAreaView>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  safeArea: {\r\n    flex: 1,\r\n    backgroundColor: '#f3f4f6',\r\n  },\r\n  container: {\r\n    flex: 1,\r\n    padding: 16,\r\n  },\r\n  header: {\r\n    marginBottom: 16,\r\n  },\r\n  title: {\r\n    fontSize: 24,\r\n    fontWeight: 'bold',\r\n    color: '#1e293b',\r\n    marginBottom: 8,\r\n  },\r\n  progressContainer: {\r\n    marginBottom: 8,\r\n  },\r\n  progressText: {\r\n    fontSize: 14,\r\n    color: '#6b7280',\r\n    marginBottom: 4,\r\n  },\r\n  progressBar: {\r\n    height: 8,\r\n    backgroundColor: '#e5e7eb',\r\n    borderRadius: 4,\r\n    overflow: 'hidden',\r\n  },\r\n  progressFill: {\r\n    height: '100%',\r\n    backgroundColor: '#8b5cf6',\r\n    borderRadius: 4,\r\n  },\r\n  exerciseList: {\r\n    flex: 1,\r\n  },\r\n  exerciseCard: {\r\n    backgroundColor: '#fff',\r\n    borderRadius: 12,\r\n    marginBottom: 12,\r\n    overflow: 'hidden',\r\n    shadowColor: '#000',\r\n    shadowOffset: { width: 0, height: 1 },\r\n    shadowOpacity: 0.1,\r\n    shadowRadius: 2,\r\n    elevation: 2,\r\n  },\r\n  exerciseHeader: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    padding: 16,\r\n  },\r\n  exerciseInfo: {\r\n    flex: 1,\r\n  },\r\n  exerciseName: {\r\n    fontSize: 16,\r\n    fontWeight: '600',\r\n    color: '#1e293b',\r\n    marginBottom: 4,\r\n  },\r\n  exerciseDetails: {\r\n    fontSize: 14,\r\n    color: '#6b7280',\r\n  },\r\n  exerciseActions: {\r\n    flexDirection: 'row',\r\n    gap: 8,\r\n  },\r\n  actionButton: {\r\n    width: 36,\r\n    height: 36,\r\n    borderRadius: 18,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  completeButton: {\r\n    backgroundColor: '#22c55e',\r\n  },\r\n  skipButton: {\r\n    backgroundColor: '#f59e0b',\r\n  },\r\n  exerciseDetails: {\r\n    padding: 16,\r\n    borderTopWidth: 1,\r\n    borderTopColor: '#f3f4f6',\r\n  },\r\n  exerciseImage: {\r\n    width: '100%',\r\n    height: 150,\r\n    borderRadius: 8,\r\n    marginBottom: 12,\r\n  },\r\n  exerciseDescription: {\r\n    fontSize: 14,\r\n    color: '#4b5563',\r\n    lineHeight: 20,\r\n  },\r\n  emptyState: {\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    padding: 40,\r\n  },\r\n  emptyStateText: {\r\n    fontSize: 18,\r\n    fontWeight: '600',\r\n    color: '#6b7280',\r\n    marginTop: 16,\r\n    marginBottom: 8,\r\n  },\r\n  emptyStateSubtext: {\r\n    fontSize: 14,\r\n    color: '#9ca3af',\r\n    textAlign: 'center',\r\n  },\r\n  allDoneButton: {\r\n    backgroundColor: '#e5e7eb',\r\n    borderRadius: 12,\r\n    padding: 16,\r\n    alignItems: 'center',\r\n    marginTop: 16,\r\n  },\r\n  allDoneButtonActive: {\r\n    backgroundColor: '#8b5cf6',\r\n  },\r\n  allDoneButtonText: {\r\n    fontSize: 16,\r\n    fontWeight: 'bold',\r\n    color: '#1e293b',\r\n  },\r\n  modalContainer: {\r\n    flex: 1,\r\n    justifyContent: 'flex-end',\r\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\r\n  },\r\n  modalContent: {\r\n    backgroundColor: '#fff',\r\n    borderTopLeftRadius: 24,\r\n    borderTopRightRadius: 24,\r\n    padding: 20,\r\n    maxHeight: '70%',\r\n  },\r\n  modalHeader: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    marginBottom: 16,\r\n  },\r\n  modalTitle: {\r\n    fontSize: 18,\r\n    fontWeight: 'bold',\r\n    color: '#1e293b',\r\n  },\r\n  modalBody: {\r\n    maxHeight: 300,\r\n  },\r\n  reasonOption: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    paddingVertical: 16,\r\n    paddingHorizontal: 12,\r\n    borderBottomWidth: 1,\r\n    borderBottomColor: '#f3f4f6',\r\n  },\r\n  reasonOptionSelected: {\r\n    backgroundColor: '#f3e8ff',\r\n  },\r\n  reasonText: {\r\n    fontSize: 16,\r\n    color: '#4b5563',\r\n  },\r\n  reasonTextSelected: {\r\n    color: '#8b5cf6',\r\n    fontWeight: '500',\r\n  },\r\n  submitButton: {\r\n    backgroundColor: '#8b5cf6',\r\n    borderRadius: 12,\r\n    padding: 16,\r\n    alignItems: 'center',\r\n    marginTop: 16,\r\n  },\r\n  submitButtonText: {\r\n    color: '#fff',\r\n    fontSize: 16,\r\n    fontWeight: 'bold',\r\n  },\r\n});\r\n\r\nexport default RehabExercisesScreen;\r\n"],"mappings":";;;;;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,gBAAA;AAAA,OAAAC,KAAA;AAAA,OAAAC,KAAA;AAAA,OAAAC,KAAA;AAAA,OAAAC,YAAA;AAYnD,SAASC,QAAQ,QAAQ,oBAAoB;AAC7C,OAAOC,GAAG;AAAqB,SAAAC,GAAA,IAAAC,IAAA,EAAAC,IAAA,IAAAC,KAAA;AAc/B,IAAMC,YAAY,GAAG,SAAfA,YAAYA,CAAAC,IAAA,EAQZ;EAAA,IAPJC,QAAQ,GAAAD,IAAA,CAARC,QAAQ;IACRC,UAAU,GAAAF,IAAA,CAAVE,UAAU;IACVC,MAAM,GAAAH,IAAA,CAANG,MAAM;EAMN,IAAAC,SAAA,GAA4CtB,QAAQ,CAAC,KAAK,CAAC;IAAAuB,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAApDG,cAAc,GAAAF,UAAA;IAAEG,iBAAiB,GAAAH,UAAA;EACxC,IAAAI,UAAA,GAAoC3B,QAAQ,CAAC,EAAE,CAAC;IAAA4B,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAAzCE,UAAU,GAAAD,UAAA;IAAEE,aAAa,GAAAF,UAAA;EAChC,IAAAG,UAAA,GAAgD/B,QAAQ,CAAC,KAAK,CAAC;IAAAgC,UAAA,GAAAR,cAAA,CAAAO,UAAA;IAAxDE,gBAAgB,GAAAD,UAAA;IAAEE,mBAAmB,GAAAF,UAAA;EAE5C,IAAMG,WAAW,GAAG,CAClB,aAAa,EACb,uBAAuB,EACvB,gCAAgC,EAChC,SAAS,EACT,QAAQ,EACR,OAAO,CACR;EAED,OACEnB,KAAA,CAACd,IAAI;IAACkC,KAAK,EAAEC,MAAM,CAACC,YAAa;IAAAC,QAAA,GAC/BvB,KAAA,CAACV,gBAAgB;MACf8B,KAAK,EAAEC,MAAM,CAACG,cAAe;MAC7BC,OAAO,EAAE,SAATA,OAAOA,CAAA;QAAA,OAAQf,iBAAiB,CAAC,CAACD,cAAc,CAAC;MAAA,CAAC;MAAAc,QAAA,GAElDvB,KAAA,CAACd,IAAI;QAACkC,KAAK,EAAEC,MAAM,CAACK,YAAa;QAAAH,QAAA,GAC/BzB,IAAA,CAACX,IAAI;UAACiC,KAAK,EAAEC,MAAM,CAACM,YAAa;UAAAJ,QAAA,EAAEpB,QAAQ,CAACyB;QAAI,CAAO,CAAC,EACxD5B,KAAA,CAACb,IAAI;UAACiC,KAAK,EAAEC,MAAM,CAACQ,eAAgB;UAAAN,QAAA,GACjCpB,QAAQ,CAAC2B,IAAI,EAAC,aAAQ,EAAC3B,QAAQ,CAAC4B,WAAW,EAAC,eAAQ,EAAC5B,QAAQ,CAAC6B,SAAS;QAAA,CACpE,CAAC;MAAA,CACH,CAAC,EACPhC,KAAA,CAACd,IAAI;QAACkC,KAAK,EAAEC,MAAM,CAACY,eAAgB;QAAAV,QAAA,GAClCzB,IAAA,CAACR,gBAAgB;UACf8B,KAAK,EAAE,CAACC,MAAM,CAACa,YAAY,EAAEb,MAAM,CAACc,cAAc,CAAE;UACpDV,OAAO,EAAErB,UAAW;UAAAmB,QAAA,EAEpBzB,IAAA,CAACH,QAAQ;YAACiC,IAAI,EAAC,WAAW;YAACQ,IAAI,EAAE,EAAG;YAACC,KAAK,EAAC;UAAM,CAAE;QAAC,CACpC,CAAC,EACnBvC,IAAA,CAACR,gBAAgB;UACf8B,KAAK,EAAE,CAACC,MAAM,CAACa,YAAY,EAAEb,MAAM,CAACiB,UAAU,CAAE;UAChDb,OAAO,EAAE,SAATA,OAAOA,CAAA;YAAA,OAAQP,mBAAmB,CAAC,IAAI,CAAC;UAAA,CAAC;UAAAK,QAAA,EAEzCzB,IAAA,CAACH,QAAQ;YAACiC,IAAI,EAAC,cAAc;YAACQ,IAAI,EAAE,EAAG;YAACC,KAAK,EAAC;UAAM,CAAE;QAAC,CACvC,CAAC;MAAA,CACf,CAAC;IAAA,CACS,CAAC,EAElB5B,cAAc,IACbT,KAAA,CAACd,IAAI;MAACkC,KAAK,EAAEC,MAAM,CAACQ,eAAgB;MAAAN,QAAA,GACjCpB,QAAQ,CAACoC,QAAQ,IAChBzC,IAAA,CAACN,KAAK;QACJgD,MAAM,EAAE;UAAEC,GAAG,EAAEtC,QAAQ,CAACoC;QAAS,CAAE;QACnCnB,KAAK,EAAEC,MAAM,CAACqB,aAAc;QAC5BC,UAAU,EAAC;MAAO,CACnB,CACF,EACD7C,IAAA,CAACX,IAAI;QAACiC,KAAK,EAAEC,MAAM,CAACuB,mBAAoB;QAAArB,QAAA,EAAEpB,QAAQ,CAAC0C;MAAW,CAAO,CAAC;IAAA,CAClE,CACP,EAGD/C,IAAA,CAACL,KAAK;MACJqD,aAAa,EAAC,OAAO;MACrBC,WAAW,EAAE,IAAK;MAClBC,OAAO,EAAE/B,gBAAiB;MAC1BgC,cAAc,EAAE,SAAhBA,cAAcA,CAAA;QAAA,OAAQ/B,mBAAmB,CAAC,KAAK,CAAC;MAAA,CAAC;MAAAK,QAAA,EAEjDzB,IAAA,CAACZ,IAAI;QAACkC,KAAK,EAAEC,MAAM,CAAC6B,cAAe;QAAA3B,QAAA,EACjCvB,KAAA,CAACd,IAAI;UAACkC,KAAK,EAAEC,MAAM,CAAC8B,YAAa;UAAA5B,QAAA,GAC/BvB,KAAA,CAACd,IAAI;YAACkC,KAAK,EAAEC,MAAM,CAAC+B,WAAY;YAAA7B,QAAA,GAC9BzB,IAAA,CAACX,IAAI;cAACiC,KAAK,EAAEC,MAAM,CAACgC,UAAW;cAAA9B,QAAA,EAAC;YAAqB,CAAM,CAAC,EAC5DzB,IAAA,CAACR,gBAAgB;cAACmC,OAAO,EAAE,SAATA,OAAOA,CAAA;gBAAA,OAAQP,mBAAmB,CAAC,KAAK,CAAC;cAAA,CAAC;cAAAK,QAAA,EAC1DzB,IAAA,CAACH,QAAQ;gBAACiC,IAAI,EAAC,OAAO;gBAACQ,IAAI,EAAE,EAAG;gBAACC,KAAK,EAAC;cAAS,CAAE;YAAC,CACnC,CAAC;UAAA,CACf,CAAC,EAEPvC,IAAA,CAACT,UAAU;YAAC+B,KAAK,EAAEC,MAAM,CAACiC,SAAU;YAAA/B,QAAA,EACjCJ,WAAW,CAACoC,GAAG,CAAC,UAACC,MAAM;cAAA,OACtBxD,KAAA,CAACV,gBAAgB;gBAEf8B,KAAK,EAAE,CACLC,MAAM,CAACoC,YAAY,EACnB5C,UAAU,KAAK2C,MAAM,IAAInC,MAAM,CAACqC,oBAAoB,CACpD;gBACFjC,OAAO,EAAE,SAATA,OAAOA,CAAA;kBAAA,OAAQX,aAAa,CAAC0C,MAAM,CAAC;gBAAA,CAAC;gBAAAjC,QAAA,GAErCzB,IAAA,CAACX,IAAI;kBAACiC,KAAK,EAAE,CACXC,MAAM,CAACsC,UAAU,EACjB9C,UAAU,KAAK2C,MAAM,IAAInC,MAAM,CAACuC,kBAAkB,CAClD;kBAAArC,QAAA,EACCiC;gBAAM,CACH,CAAC,EACN3C,UAAU,KAAK2C,MAAM,IACpB1D,IAAA,CAACH,QAAQ;kBAACiC,IAAI,EAAC,kBAAkB;kBAACQ,IAAI,EAAE,EAAG;kBAACC,KAAK,EAAC;gBAAS,CAAE,CAC9D;cAAA,GAfImB,MAgBW,CAAC;YAAA,CACpB;UAAC,CACQ,CAAC,EAEb1D,IAAA,CAACR,gBAAgB;YACf8B,KAAK,EAAEC,MAAM,CAACwC,YAAa;YAC3BpC,OAAO,EAAE,SAATA,OAAOA,CAAA,EAAQ;cACb,IAAIZ,UAAU,EAAE;gBACdR,MAAM,CAACQ,UAAU,CAAC;gBAClBK,mBAAmB,CAAC,KAAK,CAAC;gBAC1BJ,aAAa,CAAC,EAAE,CAAC;cACnB,CAAC,MAAM;gBACLvB,KAAK,CAACuE,KAAK,CAAC,wBAAwB,CAAC;cACvC;YACF,CAAE;YAAAvC,QAAA,EAEFzB,IAAA,CAACX,IAAI;cAACiC,KAAK,EAAEC,MAAM,CAAC0C,gBAAiB;cAAAxC,QAAA,EAAC;YAAM,CAAM;UAAC,CACnC,CAAC;QAAA,CACf;MAAC,CACH;IAAC,CACF,CAAC;EAAA,CACJ,CAAC;AAEX,CAAC;AAED,IAAMyC,oBAAoB,GAAG,SAAvBA,oBAAoBA,CAAA,EAAS;EACjC,IAAAC,UAAA,GAAkCjF,QAAQ,CAAa,EAAE,CAAC;IAAAkF,UAAA,GAAA1D,cAAA,CAAAyD,UAAA;IAAnDE,SAAS,GAAAD,UAAA;IAAEE,YAAY,GAAAF,UAAA;EAC9B,IAAAG,UAAA,GAA8BrF,QAAQ,CAAC,IAAI,CAAC;IAAAsF,UAAA,GAAA9D,cAAA,CAAA6D,UAAA;IAArCE,OAAO,GAAAD,UAAA;IAAEE,UAAU,GAAAF,UAAA;EAC1B,IAAAG,UAAA,GAA4CzF,QAAQ,CAAC,CAAC,CAAC;IAAA0F,WAAA,GAAAlE,cAAA,CAAAiE,UAAA;IAAhDE,cAAc,GAAAD,WAAA;IAAEE,iBAAiB,GAAAF,WAAA;EACxC,IAAAG,WAAA,GAAoC7F,QAAQ,CAAC,CAAC,CAAC;IAAA8F,WAAA,GAAAtE,cAAA,CAAAqE,WAAA;IAAxCE,UAAU,GAAAD,WAAA;IAAEE,aAAa,GAAAF,WAAA;EAChC,IAAAG,WAAA,GAA4DjG,QAAQ,CAAC,CAAC,CAAC;IAAAkG,WAAA,GAAA1E,cAAA,CAAAyE,WAAA;IAAhEE,sBAAsB,GAAAD,WAAA;IAAEE,yBAAyB,GAAAF,WAAA;EAExDjG,SAAS,CAAC,YAAM;IACdoG,cAAc,CAAC,CAAC;IAChBC,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;EAEN,IAAMD,cAAc;IAAA,IAAAE,KAAA,GAAAC,iBAAA,CAAG,aAAY;MACjC,IAAI;QAAA,IAAAC,qBAAA,EAAAC,sBAAA;QACFlB,UAAU,CAAC,IAAI,CAAC;QAChB,IAAMmB,QAAQ,SAAS/F,GAAG,CAACgG,GAAG,CAAC,8BAA8B,CAAC;QAC9DxB,YAAY,CAACuB,QAAQ,CAACE,IAAI,CAAC1B,SAAS,IAAI,EAAE,CAAC;QAC3Ca,aAAa,CAAC,EAAAS,qBAAA,GAAAE,QAAQ,CAACE,IAAI,CAAC1B,SAAS,qBAAvBsB,qBAAA,CAAyBK,MAAM,KAAI,CAAC,CAAC;QACnDlB,iBAAiB,CAAC,EAAAc,sBAAA,GAAAC,QAAQ,CAACE,IAAI,CAAC1B,SAAS,qBAAvBuB,sBAAA,CAAyBK,MAAM,CAAC,UAAAC,CAAC;UAAA,OAAIA,CAAC,CAACC,MAAM,KAAK,WAAW;QAAA,EAAC,CAACH,MAAM,KAAI,CAAC,CAAC;MAC/F,CAAC,CAAC,OAAOI,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;QACjD3G,KAAK,CAACuE,KAAK,CAAC,OAAO,EAAE,6CAA6C,CAAC;MACrE,CAAC,SAAS;QACRU,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAAA,gBAbKa,cAAcA,CAAA;MAAA,OAAAE,KAAA,CAAAa,KAAA,OAAAC,SAAA;IAAA;EAAA,GAanB;EAED,IAAMf,UAAU;IAAA,IAAAgB,KAAA,GAAAd,iBAAA,CAAG,aAAY;MAC7B,IAAI;QACF,IAAMG,QAAQ,SAAS/F,GAAG,CAACgG,GAAG,CAAC,oBAAoB,CAAC;QACpDR,yBAAyB,CAACO,QAAQ,CAACE,IAAI,CAACV,sBAAsB,IAAI,CAAC,CAAC;MACtE,CAAC,CAAC,OAAOe,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC/C;IACF,CAAC;IAAA,gBAPKZ,UAAUA,CAAA;MAAA,OAAAgB,KAAA,CAAAF,KAAA,OAAAC,SAAA;IAAA;EAAA,GAOf;EAED,IAAME,sBAAsB;IAAA,IAAAC,KAAA,GAAAhB,iBAAA,CAAG,WAAOiB,UAAkB,EAAK;MAC3D,IAAI;QACF,MAAM7G,GAAG,CAAC8G,GAAG,CAAC,0BAA0BD,UAAU,WAAW,CAAC;QAG9DrC,YAAY,CAACD,SAAS,CAACZ,GAAG,CAAC,UAAAoD,EAAE;UAAA,OAC3BA,EAAE,CAACC,GAAG,KAAKH,UAAU,GAAAI,aAAA,CAAAA,aAAA,KAAQF,EAAE;YAAEV,MAAM,EAAE;UAAW,KAAKU,EAAE;QAAA,CAC7D,CAAC,CAAC;QAEF/B,iBAAiB,CAAC,UAAAkC,IAAI;UAAA,OAAIA,IAAI,GAAG,CAAC;QAAA,EAAC;QAGnC,IAAMC,YAAY,GAAG5C,SAAS,CAAC6C,KAAK,CAAC,UAAAL,EAAE;UAAA,OACrCA,EAAE,CAACC,GAAG,KAAKH,UAAU,GAAG,IAAI,GAAGE,EAAE,CAACV,MAAM,KAAK,WAAW;QAAA,CAC1D,CAAC;QAED,IAAIc,YAAY,EAAE;UAEhB,IAAI5B,sBAAsB,GAAG,CAAC,IAAI,CAAC,EAAE;YACnC5F,KAAK,CAACuE,KAAK,CACT,iBAAiB,EACjB,qFACF,CAAC;UACH;QACF;MACF,CAAC,CAAC,OAAOoC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;QAClD3G,KAAK,CAACuE,KAAK,CAAC,OAAO,EAAE,uCAAuC,CAAC;MAC/D;IACF,CAAC;IAAA,gBA7BKyC,sBAAsBA,CAAAU,EAAA;MAAA,OAAAT,KAAA,CAAAJ,KAAA,OAAAC,SAAA;IAAA;EAAA,GA6B3B;EAED,IAAMa,kBAAkB;IAAA,IAAAC,KAAA,GAAA3B,iBAAA,CAAG,WAAOiB,UAAkB,EAAEjD,MAAc,EAAK;MACvE,IAAI;QACF,MAAM5D,GAAG,CAAC8G,GAAG,CAAC,0BAA0BD,UAAU,OAAO,EAAE;UAAEjD,MAAM,EAANA;QAAO,CAAC,CAAC;QAGtEY,YAAY,CAACD,SAAS,CAACZ,GAAG,CAAC,UAAAoD,EAAE;UAAA,OAC3BA,EAAE,CAACC,GAAG,KAAKH,UAAU,GAAAI,aAAA,CAAAA,aAAA,KAAQF,EAAE;YAAEV,MAAM,EAAE;UAAS,KAAKU,EAAE;QAAA,CAC3D,CAAC,CAAC;QAGF,IAAMS,gBAAgB,GAAGjD,SAAS,CAAC4B,MAAM,CAAC,UAAAY,EAAE;UAAA,OAAIA,EAAE,CAACV,MAAM,KAAK,SAAS;QAAA,EAAC,CAACH,MAAM;QAC/E,IAAIsB,gBAAgB,IAAI,CAAC,EAAE;UAEzB,MAAMxH,GAAG,CAACyH,IAAI,CAAC,gBAAgB,EAAE;YAC/BC,IAAI,EAAE,qBAAqB;YAC3BC,YAAY,EAAEH,gBAAgB;YAC9B5D,MAAM,EAAEA;UACV,CAAC,CAAC;UAEFjE,KAAK,CAACuE,KAAK,CACT,QAAQ,EACR,sGACF,CAAC;QACH;MACF,CAAC,CAAC,OAAOoC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;QAChD3G,KAAK,CAACuE,KAAK,CAAC,OAAO,EAAE,qCAAqC,CAAC;MAC7D;IACF,CAAC;IAAA,gBA5BKoD,kBAAkBA,CAAAM,GAAA,EAAAC,GAAA;MAAA,OAAAN,KAAA,CAAAf,KAAA,OAAAC,SAAA;IAAA;EAAA,GA4BvB;EAED,IAAMqB,aAAa;IAAA,IAAAC,KAAA,GAAAnC,iBAAA,CAAG,aAAY;MAChC,IAAIb,cAAc,KAAKI,UAAU,EAAE;QACjC,IAAI;UACF,MAAMnF,GAAG,CAACyH,IAAI,CAAC,+BAA+B,CAAC;UAC/C9H,KAAK,CAACuE,KAAK,CACT,YAAY,EACZ,iDAAiD,EACjD,CAAC;YAAE8D,IAAI,EAAE;UAAK,CAAC,CACjB,CAAC;QACH,CAAC,CAAC,OAAO1B,KAAK,EAAE;UACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;QACnD;MACF,CAAC,MAAM;QACL3G,KAAK,CAACuE,KAAK,CACT,qBAAqB,EACrB,+CAA+C,EAC/C,CAAC;UAAE8D,IAAI,EAAE;QAAK,CAAC,CACjB,CAAC;MACH;IACF,CAAC;IAAA,gBAnBKF,aAAaA,CAAA;MAAA,OAAAC,KAAA,CAAAvB,KAAA,OAAAC,SAAA;IAAA;EAAA,GAmBlB;EAED,OACEvG,IAAA,CAACJ,YAAY;IAAC0B,KAAK,EAAEC,MAAM,CAACwG,QAAS;IAAAtG,QAAA,EACnCvB,KAAA,CAACd,IAAI;MAACkC,KAAK,EAAEC,MAAM,CAACyG,SAAU;MAAAvG,QAAA,GAC5BvB,KAAA,CAACd,IAAI;QAACkC,KAAK,EAAEC,MAAM,CAAC0G,MAAO;QAAAxG,QAAA,GACzBzB,IAAA,CAACX,IAAI;UAACiC,KAAK,EAAEC,MAAM,CAAC2G,KAAM;UAAAzG,QAAA,EAAC;QAAqB,CAAM,CAAC,EACvDvB,KAAA,CAACd,IAAI;UAACkC,KAAK,EAAEC,MAAM,CAAC4G,iBAAkB;UAAA1G,QAAA,GACpCvB,KAAA,CAACb,IAAI;YAACiC,KAAK,EAAEC,MAAM,CAAC6G,YAAa;YAAA3G,QAAA,GAC9BoD,cAAc,EAAC,GAAC,EAACI,UAAU,EAAC,YAC/B;UAAA,CAAM,CAAC,EACPjF,IAAA,CAACZ,IAAI;YAACkC,KAAK,EAAEC,MAAM,CAAC8G,WAAY;YAAA5G,QAAA,EAC9BzB,IAAA,CAACZ,IAAI;cACHkC,KAAK,EAAE,CACLC,MAAM,CAAC+G,YAAY,EACnB;gBAAEC,KAAK,EAAE,GAAGtD,UAAU,GAAG,CAAC,GAAIJ,cAAc,GAAGI,UAAU,GAAI,GAAG,GAAG,CAAC;cAAI,CAAC;YACzE,CACH;UAAC,CACE,CAAC;QAAA,CACH,CAAC;MAAA,CACH,CAAC,EAEPjF,IAAA,CAACT,UAAU;QAAC+B,KAAK,EAAEC,MAAM,CAACiH,YAAa;QAAA/G,QAAA,EACpC4C,SAAS,CAAC2B,MAAM,GAAG,CAAC,GACnB3B,SAAS,CAACZ,GAAG,CAAC,UAACpD,QAAQ;UAAA,OACrBL,IAAA,CAACG,YAAY;YAEXE,QAAQ,EAAEA,QAAS;YACnBC,UAAU,EAAE,SAAZA,UAAUA,CAAA;cAAA,OAAQmG,sBAAsB,CAACpG,QAAQ,CAACyG,GAAG,CAAC;YAAA,CAAC;YACvDvG,MAAM,EAAE,SAARA,MAAMA,CAAGmD,MAAM;cAAA,OAAK0D,kBAAkB,CAAC/G,QAAQ,CAACyG,GAAG,EAAEpD,MAAM,CAAC;YAAA;UAAC,GAHxDrD,QAAQ,CAACyG,GAIf,CAAC;QAAA,CACH,CAAC,GAEF5G,KAAA,CAACd,IAAI;UAACkC,KAAK,EAAEC,MAAM,CAACkH,UAAW;UAAAhH,QAAA,GAC7BzB,IAAA,CAACH,QAAQ;YAACiC,IAAI,EAAC,SAAS;YAACQ,IAAI,EAAE,EAAG;YAACC,KAAK,EAAC;UAAS,CAAE,CAAC,EACrDvC,IAAA,CAACX,IAAI;YAACiC,KAAK,EAAEC,MAAM,CAACmH,cAAe;YAAAjH,QAAA,EAAC;UAAgC,CAAM,CAAC,EAC3EzB,IAAA,CAACX,IAAI;YAACiC,KAAK,EAAEC,MAAM,CAACoH,iBAAkB;YAAAlH,QAAA,EAAC;UAEvC,CAAM,CAAC;QAAA,CACH;MACP,CACS,CAAC,EAEZ4C,SAAS,CAAC2B,MAAM,GAAG,CAAC,IACnBhG,IAAA,CAACR,gBAAgB;QACf8B,KAAK,EAAE,CACLC,MAAM,CAACqH,aAAa,EACpB/D,cAAc,KAAKI,UAAU,GAAG1D,MAAM,CAACsH,mBAAmB,GAAG,CAAC,CAAC,CAC/D;QACFlH,OAAO,EAAEiG,aAAc;QAAAnG,QAAA,EAEvBzB,IAAA,CAACX,IAAI;UAACiC,KAAK,EAAEC,MAAM,CAACuH,iBAAkB;UAAArH,QAAA,EAAC;QAAQ,CAAM;MAAC,CACtC,CACnB;IAAA,CACG;EAAC,CACK,CAAC;AAEnB,CAAC;AAED,IAAMF,MAAM,GAAGjC,UAAU,CAACyJ,MAAM,CAAC;EAC/BhB,QAAQ,EAAE;IACRiB,IAAI,EAAE,CAAC;IACPC,eAAe,EAAE;EACnB,CAAC;EACDjB,SAAS,EAAE;IACTgB,IAAI,EAAE,CAAC;IACPE,OAAO,EAAE;EACX,CAAC;EACDjB,MAAM,EAAE;IACNkB,YAAY,EAAE;EAChB,CAAC;EACDjB,KAAK,EAAE;IACLkB,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE,MAAM;IAClB9G,KAAK,EAAE,SAAS;IAChB4G,YAAY,EAAE;EAChB,CAAC;EACDhB,iBAAiB,EAAE;IACjBgB,YAAY,EAAE;EAChB,CAAC;EACDf,YAAY,EAAE;IACZgB,QAAQ,EAAE,EAAE;IACZ7G,KAAK,EAAE,SAAS;IAChB4G,YAAY,EAAE;EAChB,CAAC;EACDd,WAAW,EAAE;IACXiB,MAAM,EAAE,CAAC;IACTL,eAAe,EAAE,SAAS;IAC1BM,YAAY,EAAE,CAAC;IACfC,QAAQ,EAAE;EACZ,CAAC;EACDlB,YAAY,EAAE;IACZgB,MAAM,EAAE,MAAM;IACdL,eAAe,EAAE,SAAS;IAC1BM,YAAY,EAAE;EAChB,CAAC;EACDf,YAAY,EAAE;IACZQ,IAAI,EAAE;EACR,CAAC;EACDxH,YAAY,EAAE;IACZyH,eAAe,EAAE,MAAM;IACvBM,YAAY,EAAE,EAAE;IAChBJ,YAAY,EAAE,EAAE;IAChBK,QAAQ,EAAE,QAAQ;IAClBC,WAAW,EAAE,MAAM;IACnBC,YAAY,EAAE;MAAEnB,KAAK,EAAE,CAAC;MAAEe,MAAM,EAAE;IAAE,CAAC;IACrCK,aAAa,EAAE,GAAG;IAClBC,YAAY,EAAE,CAAC;IACfC,SAAS,EAAE;EACb,CAAC;EACDnI,cAAc,EAAE;IACdoI,aAAa,EAAE,KAAK;IACpBC,cAAc,EAAE,eAAe;IAC/BC,UAAU,EAAE,QAAQ;IACpBd,OAAO,EAAE;EACX,CAAC;EACDtH,YAAY,EAAE;IACZoH,IAAI,EAAE;EACR,CAAC;EACDnH,YAAY,EAAE;IACZuH,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE,KAAK;IACjB9G,KAAK,EAAE,SAAS;IAChB4G,YAAY,EAAE;EAChB,CAAC;EACDpH,eAAe,EAAE;IACfqH,QAAQ,EAAE,EAAE;IACZ7G,KAAK,EAAE;EACT,CAAC;EACDJ,eAAe,EAAE;IACf2H,aAAa,EAAE,KAAK;IACpBG,GAAG,EAAE;EACP,CAAC;EACD7H,YAAY,EAAE;IACZmG,KAAK,EAAE,EAAE;IACTe,MAAM,EAAE,EAAE;IACVC,YAAY,EAAE,EAAE;IAChBQ,cAAc,EAAE,QAAQ;IACxBC,UAAU,EAAE;EACd,CAAC;EACD3H,cAAc,EAAE;IACd4G,eAAe,EAAE;EACnB,CAAC;EACDzG,UAAU,EAAE;IACVyG,eAAe,EAAE;EACnB,CAAC;EACDlH,eAAe,EAAE;IACfmH,OAAO,EAAE,EAAE;IACXgB,cAAc,EAAE,CAAC;IACjBC,cAAc,EAAE;EAClB,CAAC;EACDvH,aAAa,EAAE;IACb2F,KAAK,EAAE,MAAM;IACbe,MAAM,EAAE,GAAG;IACXC,YAAY,EAAE,CAAC;IACfJ,YAAY,EAAE;EAChB,CAAC;EACDrG,mBAAmB,EAAE;IACnBsG,QAAQ,EAAE,EAAE;IACZ7G,KAAK,EAAE,SAAS;IAChB6H,UAAU,EAAE;EACd,CAAC;EACD3B,UAAU,EAAE;IACVuB,UAAU,EAAE,QAAQ;IACpBD,cAAc,EAAE,QAAQ;IACxBb,OAAO,EAAE;EACX,CAAC;EACDR,cAAc,EAAE;IACdU,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE,KAAK;IACjB9G,KAAK,EAAE,SAAS;IAChB8H,SAAS,EAAE,EAAE;IACblB,YAAY,EAAE;EAChB,CAAC;EACDR,iBAAiB,EAAE;IACjBS,QAAQ,EAAE,EAAE;IACZ7G,KAAK,EAAE,SAAS;IAChB+H,SAAS,EAAE;EACb,CAAC;EACD1B,aAAa,EAAE;IACbK,eAAe,EAAE,SAAS;IAC1BM,YAAY,EAAE,EAAE;IAChBL,OAAO,EAAE,EAAE;IACXc,UAAU,EAAE,QAAQ;IACpBK,SAAS,EAAE;EACb,CAAC;EACDxB,mBAAmB,EAAE;IACnBI,eAAe,EAAE;EACnB,CAAC;EACDH,iBAAiB,EAAE;IACjBM,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE,MAAM;IAClB9G,KAAK,EAAE;EACT,CAAC;EACDa,cAAc,EAAE;IACd4F,IAAI,EAAE,CAAC;IACPe,cAAc,EAAE,UAAU;IAC1Bd,eAAe,EAAE;EACnB,CAAC;EACD5F,YAAY,EAAE;IACZ4F,eAAe,EAAE,MAAM;IACvBsB,mBAAmB,EAAE,EAAE;IACvBC,oBAAoB,EAAE,EAAE;IACxBtB,OAAO,EAAE,EAAE;IACXuB,SAAS,EAAE;EACb,CAAC;EACDnH,WAAW,EAAE;IACXwG,aAAa,EAAE,KAAK;IACpBC,cAAc,EAAE,eAAe;IAC/BC,UAAU,EAAE,QAAQ;IACpBb,YAAY,EAAE;EAChB,CAAC;EACD5F,UAAU,EAAE;IACV6F,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE,MAAM;IAClB9G,KAAK,EAAE;EACT,CAAC;EACDiB,SAAS,EAAE;IACTiH,SAAS,EAAE;EACb,CAAC;EACD9G,YAAY,EAAE;IACZmG,aAAa,EAAE,KAAK;IACpBC,cAAc,EAAE,eAAe;IAC/BC,UAAU,EAAE,QAAQ;IACpBU,eAAe,EAAE,EAAE;IACnBC,iBAAiB,EAAE,EAAE;IACrBC,iBAAiB,EAAE,CAAC;IACpBC,iBAAiB,EAAE;EACrB,CAAC;EACDjH,oBAAoB,EAAE;IACpBqF,eAAe,EAAE;EACnB,CAAC;EACDpF,UAAU,EAAE;IACVuF,QAAQ,EAAE,EAAE;IACZ7G,KAAK,EAAE;EACT,CAAC;EACDuB,kBAAkB,EAAE;IAClBvB,KAAK,EAAE,SAAS;IAChB8G,UAAU,EAAE;EACd,CAAC;EACDtF,YAAY,EAAE;IACZkF,eAAe,EAAE,SAAS;IAC1BM,YAAY,EAAE,EAAE;IAChBL,OAAO,EAAE,EAAE;IACXc,UAAU,EAAE,QAAQ;IACpBK,SAAS,EAAE;EACb,CAAC;EACDpG,gBAAgB,EAAE;IAChB1B,KAAK,EAAE,MAAM;IACb6G,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE;EACd;AACF,CAAC,CAAC;AAEF,eAAenF,oBAAoB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
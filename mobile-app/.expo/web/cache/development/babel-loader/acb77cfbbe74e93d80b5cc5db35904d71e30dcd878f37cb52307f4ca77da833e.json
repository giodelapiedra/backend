{"ast":null,"code":"import React from 'react';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { Ionicons } from '@expo/vector-icons';\nimport HomeScreen from \"../screens/HomeScreen\";\nimport RehabExercisesScreen from \"../screens/RehabExercisesScreen\";\nimport WeeklyReadinessScreen from \"../screens/WeeklyReadinessScreen\";\nimport IncidentReportScreen from \"../screens/IncidentReportScreen\";\nimport ProfileScreen from \"../screens/ProfileScreen\";\nimport LoginScreen from \"../screens/LoginScreen\";\nimport { useAuth } from \"../contexts/AuthContext\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Tab = createBottomTabNavigator();\nvar Stack = createNativeStackNavigator();\nvar MainTabs = function MainTabs() {\n  return _jsxs(Tab.Navigator, {\n    screenOptions: function screenOptions(_ref) {\n      var route = _ref.route;\n      return {\n        tabBarIcon: function tabBarIcon(_ref2) {\n          var focused = _ref2.focused,\n            color = _ref2.color,\n            size = _ref2.size;\n          var iconName;\n          if (route.name === 'Home') {\n            iconName = focused ? 'home' : 'home-outline';\n          } else if (route.name === 'Exercises') {\n            iconName = focused ? 'fitness' : 'fitness-outline';\n          } else if (route.name === 'Readiness') {\n            iconName = focused ? 'checkmark-circle' : 'checkmark-circle-outline';\n          } else if (route.name === 'Report') {\n            iconName = focused ? 'warning' : 'warning-outline';\n          } else if (route.name === 'Profile') {\n            iconName = focused ? 'person' : 'person-outline';\n          }\n          return _jsx(Ionicons, {\n            name: iconName,\n            size: size,\n            color: color\n          });\n        },\n        tabBarActiveTintColor: '#8b5cf6',\n        tabBarInactiveTintColor: 'gray',\n        headerShown: false\n      };\n    },\n    children: [_jsx(Tab.Screen, {\n      name: \"Home\",\n      component: HomeScreen\n    }), _jsx(Tab.Screen, {\n      name: \"Exercises\",\n      component: RehabExercisesScreen\n    }), _jsx(Tab.Screen, {\n      name: \"Readiness\",\n      component: WeeklyReadinessScreen\n    }), _jsx(Tab.Screen, {\n      name: \"Report\",\n      component: IncidentReportScreen\n    }), _jsx(Tab.Screen, {\n      name: \"Profile\",\n      component: ProfileScreen\n    })]\n  });\n};\nvar AppNavigator = function AppNavigator() {\n  var _useAuth = useAuth(),\n    user = _useAuth.user,\n    isLoading = _useAuth.isLoading;\n  if (isLoading) {\n    return null;\n  }\n  return _jsx(Stack.Navigator, {\n    children: user ? _jsx(Stack.Screen, {\n      name: \"Main\",\n      component: MainTabs,\n      options: {\n        headerShown: false\n      }\n    }) : _jsx(Stack.Screen, {\n      name: \"Login\",\n      component: LoginScreen,\n      options: {\n        headerShown: false\n      }\n    })\n  });\n};\nexport default AppNavigator;","map":{"version":3,"names":["React","createBottomTabNavigator","createNativeStackNavigator","Ionicons","HomeScreen","RehabExercisesScreen","WeeklyReadinessScreen","IncidentReportScreen","ProfileScreen","LoginScreen","useAuth","jsx","_jsx","jsxs","_jsxs","Tab","Stack","MainTabs","Navigator","screenOptions","_ref","route","tabBarIcon","_ref2","focused","color","size","iconName","name","tabBarActiveTintColor","tabBarInactiveTintColor","headerShown","children","Screen","component","AppNavigator","_useAuth","user","isLoading","options"],"sources":["C:/Users/GIO/project/mobile-app/src/navigation/AppNavigator.tsx"],"sourcesContent":["import React from 'react';\r\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\r\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\r\nimport { Ionicons } from '@expo/vector-icons';\r\n\r\nimport HomeScreen from '../screens/HomeScreen';\r\nimport RehabExercisesScreen from '../screens/RehabExercisesScreen';\r\nimport WeeklyReadinessScreen from '../screens/WeeklyReadinessScreen';\r\nimport IncidentReportScreen from '../screens/IncidentReportScreen';\r\nimport ProfileScreen from '../screens/ProfileScreen';\r\nimport LoginScreen from '../screens/LoginScreen';\r\n\r\nimport { useAuth } from '../contexts/AuthContext';\r\n\r\nconst Tab = createBottomTabNavigator();\r\nconst Stack = createNativeStackNavigator();\r\n\r\nconst MainTabs = () => {\r\n  return (\r\n    <Tab.Navigator\r\n      screenOptions={({ route }) => ({\r\n        tabBarIcon: ({ focused, color, size }) => {\r\n          let iconName;\r\n\r\n          if (route.name === 'Home') {\r\n            iconName = focused ? 'home' : 'home-outline';\r\n          } else if (route.name === 'Exercises') {\r\n            iconName = focused ? 'fitness' : 'fitness-outline';\r\n          } else if (route.name === 'Readiness') {\r\n            iconName = focused ? 'checkmark-circle' : 'checkmark-circle-outline';\r\n          } else if (route.name === 'Report') {\r\n            iconName = focused ? 'warning' : 'warning-outline';\r\n          } else if (route.name === 'Profile') {\r\n            iconName = focused ? 'person' : 'person-outline';\r\n          }\r\n\r\n          return <Ionicons name={iconName} size={size} color={color} />;\r\n        },\r\n        tabBarActiveTintColor: '#8b5cf6',\r\n        tabBarInactiveTintColor: 'gray',\r\n        headerShown: false,\r\n      })}\r\n    >\r\n      <Tab.Screen name=\"Home\" component={HomeScreen} />\r\n      <Tab.Screen name=\"Exercises\" component={RehabExercisesScreen} />\r\n      <Tab.Screen name=\"Readiness\" component={WeeklyReadinessScreen} />\r\n      <Tab.Screen name=\"Report\" component={IncidentReportScreen} />\r\n      <Tab.Screen name=\"Profile\" component={ProfileScreen} />\r\n    </Tab.Navigator>\r\n  );\r\n};\r\n\r\nconst AppNavigator = () => {\r\n  const { user, isLoading } = useAuth();\r\n\r\n  if (isLoading) {\r\n    return null; // or a loading screen\r\n  }\r\n\r\n  return (\r\n    <Stack.Navigator>\r\n      {user ? (\r\n        <Stack.Screen \r\n          name=\"Main\" \r\n          component={MainTabs} \r\n          options={{ headerShown: false }} \r\n        />\r\n      ) : (\r\n        <Stack.Screen \r\n          name=\"Login\" \r\n          component={LoginScreen} \r\n          options={{ headerShown: false }} \r\n        />\r\n      )}\r\n    </Stack.Navigator>\r\n  );\r\n};\r\n\r\nexport default AppNavigator;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}